// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: baidu_realtime_bidding.proto

#ifndef PROTOBUF_baidu_5frealtime_5fbidding_2eproto__INCLUDED
#define PROTOBUF_baidu_5frealtime_5fbidding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

class BidRequest;
class BidRequest_BaiduId;
class BidRequest_Geo;
class BidRequest_Geo_Coordinate;
class BidRequest_Geo_UserLocation;
class BidRequest_Mobile;
class BidRequest_Mobile_MobileID;
class BidRequest_Mobile_DeviceOsVersion;
class BidRequest_Mobile_ForAdvertisingID;
class BidRequest_Mobile_MobileApp;
class BidRequest_Video;
class BidRequest_AdSlot;
class BidRequest_AdSlot_VideoInfo;
class BidRequest_AdSlot_LinkUnitInfo;
class BidRequest_AdSlot_PreferredOrderInfo;
class BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder;
class BidRequest_AdSlot_ExpandCreativeInfo;
class BidResponse;
class BidResponse_Ad;
class BidResponse_Ad_LinkUnitKeyword;
class BidResponse_Ad_ExpandCreativeInfo;

enum BidRequest_Geo_Coordinate_Standard {
  BidRequest_Geo_Coordinate_Standard_BD_09 = 0,
  BidRequest_Geo_Coordinate_Standard_GCJ_02 = 1,
  BidRequest_Geo_Coordinate_Standard_WGS_84 = 2,
  BidRequest_Geo_Coordinate_Standard_BD_09_LL = 3
};
bool BidRequest_Geo_Coordinate_Standard_IsValid(int value);
const BidRequest_Geo_Coordinate_Standard BidRequest_Geo_Coordinate_Standard_Standard_MIN = BidRequest_Geo_Coordinate_Standard_BD_09;
const BidRequest_Geo_Coordinate_Standard BidRequest_Geo_Coordinate_Standard_Standard_MAX = BidRequest_Geo_Coordinate_Standard_BD_09_LL;
const int BidRequest_Geo_Coordinate_Standard_Standard_ARRAYSIZE = BidRequest_Geo_Coordinate_Standard_Standard_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Geo_Coordinate_Standard_descriptor();
inline const ::std::string& BidRequest_Geo_Coordinate_Standard_Name(BidRequest_Geo_Coordinate_Standard value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Geo_Coordinate_Standard_descriptor(), value);
}
inline bool BidRequest_Geo_Coordinate_Standard_Parse(
    const ::std::string& name, BidRequest_Geo_Coordinate_Standard* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Geo_Coordinate_Standard>(
    BidRequest_Geo_Coordinate_Standard_descriptor(), name, value);
}
enum BidRequest_Mobile_MobileID_IDType {
  BidRequest_Mobile_MobileID_IDType_UNKNOWN = 0,
  BidRequest_Mobile_MobileID_IDType_IMEI = 1,
  BidRequest_Mobile_MobileID_IDType_MAC = 2
};
bool BidRequest_Mobile_MobileID_IDType_IsValid(int value);
const BidRequest_Mobile_MobileID_IDType BidRequest_Mobile_MobileID_IDType_IDType_MIN = BidRequest_Mobile_MobileID_IDType_UNKNOWN;
const BidRequest_Mobile_MobileID_IDType BidRequest_Mobile_MobileID_IDType_IDType_MAX = BidRequest_Mobile_MobileID_IDType_MAC;
const int BidRequest_Mobile_MobileID_IDType_IDType_ARRAYSIZE = BidRequest_Mobile_MobileID_IDType_IDType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileID_IDType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileID_IDType_Name(BidRequest_Mobile_MobileID_IDType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileID_IDType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileID_IDType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileID_IDType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileID_IDType>(
    BidRequest_Mobile_MobileID_IDType_descriptor(), name, value);
}
enum BidRequest_Mobile_ForAdvertisingID_IDType {
  BidRequest_Mobile_ForAdvertisingID_IDType_UNKNOWN = 0,
  BidRequest_Mobile_ForAdvertisingID_IDType_ANDROID_ID = 4,
  BidRequest_Mobile_ForAdvertisingID_IDType_IDFA = 5
};
bool BidRequest_Mobile_ForAdvertisingID_IDType_IsValid(int value);
const BidRequest_Mobile_ForAdvertisingID_IDType BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MIN = BidRequest_Mobile_ForAdvertisingID_IDType_UNKNOWN;
const BidRequest_Mobile_ForAdvertisingID_IDType BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MAX = BidRequest_Mobile_ForAdvertisingID_IDType_IDFA;
const int BidRequest_Mobile_ForAdvertisingID_IDType_IDType_ARRAYSIZE = BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_ForAdvertisingID_IDType_descriptor();
inline const ::std::string& BidRequest_Mobile_ForAdvertisingID_IDType_Name(BidRequest_Mobile_ForAdvertisingID_IDType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_ForAdvertisingID_IDType_descriptor(), value);
}
inline bool BidRequest_Mobile_ForAdvertisingID_IDType_Parse(
    const ::std::string& name, BidRequest_Mobile_ForAdvertisingID_IDType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_ForAdvertisingID_IDType>(
    BidRequest_Mobile_ForAdvertisingID_IDType_descriptor(), name, value);
}
enum BidRequest_Mobile_MobileApp_AppInteractionType {
  BidRequest_Mobile_MobileApp_AppInteractionType_TELEPHONE = 0,
  BidRequest_Mobile_MobileApp_AppInteractionType_DOWNLOAD = 1
};
bool BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(int value);
const BidRequest_Mobile_MobileApp_AppInteractionType BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MIN = BidRequest_Mobile_MobileApp_AppInteractionType_TELEPHONE;
const BidRequest_Mobile_MobileApp_AppInteractionType BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MAX = BidRequest_Mobile_MobileApp_AppInteractionType_DOWNLOAD;
const int BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_ARRAYSIZE = BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileApp_AppInteractionType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileApp_AppInteractionType_Name(BidRequest_Mobile_MobileApp_AppInteractionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileApp_AppInteractionType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileApp_AppInteractionType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileApp_AppInteractionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileApp_AppInteractionType>(
    BidRequest_Mobile_MobileApp_AppInteractionType_descriptor(), name, value);
}
enum BidRequest_Mobile_MobileDeviceType {
  BidRequest_Mobile_MobileDeviceType_UNKNOWN_DEVICE = 0,
  BidRequest_Mobile_MobileDeviceType_HIGHEND_PHONE = 1,
  BidRequest_Mobile_MobileDeviceType_TABLET = 2
};
bool BidRequest_Mobile_MobileDeviceType_IsValid(int value);
const BidRequest_Mobile_MobileDeviceType BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MIN = BidRequest_Mobile_MobileDeviceType_UNKNOWN_DEVICE;
const BidRequest_Mobile_MobileDeviceType BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX = BidRequest_Mobile_MobileDeviceType_TABLET;
const int BidRequest_Mobile_MobileDeviceType_MobileDeviceType_ARRAYSIZE = BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileDeviceType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileDeviceType_Name(BidRequest_Mobile_MobileDeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileDeviceType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileDeviceType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileDeviceType>(
    BidRequest_Mobile_MobileDeviceType_descriptor(), name, value);
}
enum BidRequest_Mobile_OS {
  BidRequest_Mobile_OS_UNKNOWN_OS = 0,
  BidRequest_Mobile_OS_IOS = 1,
  BidRequest_Mobile_OS_ANDROID = 2,
  BidRequest_Mobile_OS_WINDOWS_PHONE = 3
};
bool BidRequest_Mobile_OS_IsValid(int value);
const BidRequest_Mobile_OS BidRequest_Mobile_OS_OS_MIN = BidRequest_Mobile_OS_UNKNOWN_OS;
const BidRequest_Mobile_OS BidRequest_Mobile_OS_OS_MAX = BidRequest_Mobile_OS_WINDOWS_PHONE;
const int BidRequest_Mobile_OS_OS_ARRAYSIZE = BidRequest_Mobile_OS_OS_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_OS_descriptor();
inline const ::std::string& BidRequest_Mobile_OS_Name(BidRequest_Mobile_OS value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_OS_descriptor(), value);
}
inline bool BidRequest_Mobile_OS_Parse(
    const ::std::string& name, BidRequest_Mobile_OS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_OS>(
    BidRequest_Mobile_OS_descriptor(), name, value);
}
enum BidRequest_Mobile_WirelessNetworkType {
  BidRequest_Mobile_WirelessNetworkType_UNKNOWN_NETWORK = 0,
  BidRequest_Mobile_WirelessNetworkType_WIFI = 1,
  BidRequest_Mobile_WirelessNetworkType_MOBILE_2G = 2,
  BidRequest_Mobile_WirelessNetworkType_MOBILE_3G = 3,
  BidRequest_Mobile_WirelessNetworkType_MOBILE_4G = 4
};
bool BidRequest_Mobile_WirelessNetworkType_IsValid(int value);
const BidRequest_Mobile_WirelessNetworkType BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MIN = BidRequest_Mobile_WirelessNetworkType_UNKNOWN_NETWORK;
const BidRequest_Mobile_WirelessNetworkType BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MAX = BidRequest_Mobile_WirelessNetworkType_MOBILE_4G;
const int BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_ARRAYSIZE = BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_WirelessNetworkType_descriptor();
inline const ::std::string& BidRequest_Mobile_WirelessNetworkType_Name(BidRequest_Mobile_WirelessNetworkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_WirelessNetworkType_descriptor(), value);
}
inline bool BidRequest_Mobile_WirelessNetworkType_Parse(
    const ::std::string& name, BidRequest_Mobile_WirelessNetworkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_WirelessNetworkType>(
    BidRequest_Mobile_WirelessNetworkType_descriptor(), name, value);
}
enum BidRequest_AdSlot_ExpandCreativeInfo_ActionType {
  BidRequest_AdSlot_ExpandCreativeInfo_ActionType_HOVER = 1,
  BidRequest_AdSlot_ExpandCreativeInfo_ActionType_CLICK = 2,
  BidRequest_AdSlot_ExpandCreativeInfo_ActionType_LOAD = 3
};
bool BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(int value);
const BidRequest_AdSlot_ExpandCreativeInfo_ActionType BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MIN = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_HOVER;
const BidRequest_AdSlot_ExpandCreativeInfo_ActionType BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MAX = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_LOAD;
const int BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_ARRAYSIZE = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor();
inline const ::std::string& BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Name(BidRequest_AdSlot_ExpandCreativeInfo_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor(), value);
}
inline bool BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Parse(
    const ::std::string& name, BidRequest_AdSlot_ExpandCreativeInfo_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_ExpandCreativeInfo_ActionType>(
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor(), name, value);
}
enum BidRequest_AdSlot_ExpandCreativeInfo_Direction {
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_NONE = 0,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_UP = 1,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_DOWN = 2,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_LEFT = 3,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_RIGHT = 4
};
bool BidRequest_AdSlot_ExpandCreativeInfo_Direction_IsValid(int value);
const BidRequest_AdSlot_ExpandCreativeInfo_Direction BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MIN = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_NONE;
const BidRequest_AdSlot_ExpandCreativeInfo_Direction BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MAX = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_RIGHT;
const int BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_ARRAYSIZE = BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor();
inline const ::std::string& BidRequest_AdSlot_ExpandCreativeInfo_Direction_Name(BidRequest_AdSlot_ExpandCreativeInfo_Direction value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor(), value);
}
inline bool BidRequest_AdSlot_ExpandCreativeInfo_Direction_Parse(
    const ::std::string& name, BidRequest_AdSlot_ExpandCreativeInfo_Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_ExpandCreativeInfo_Direction>(
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor(), name, value);
}
enum BidRequest_Gender {
  BidRequest_Gender_UNKNOWN = 0,
  BidRequest_Gender_MALE = 1,
  BidRequest_Gender_FEMALE = 2
};
bool BidRequest_Gender_IsValid(int value);
const BidRequest_Gender BidRequest_Gender_Gender_MIN = BidRequest_Gender_UNKNOWN;
const BidRequest_Gender BidRequest_Gender_Gender_MAX = BidRequest_Gender_FEMALE;
const int BidRequest_Gender_Gender_ARRAYSIZE = BidRequest_Gender_Gender_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Gender_descriptor();
inline const ::std::string& BidRequest_Gender_Name(BidRequest_Gender value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Gender_descriptor(), value);
}
inline bool BidRequest_Gender_Parse(
    const ::std::string& name, BidRequest_Gender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Gender>(
    BidRequest_Gender_descriptor(), name, value);
}
// ===================================================================

class BidRequest_BaiduId : public ::google::protobuf::Message {
 public:
  BidRequest_BaiduId();
  virtual ~BidRequest_BaiduId();

  BidRequest_BaiduId(const BidRequest_BaiduId& from);

  inline BidRequest_BaiduId& operator=(const BidRequest_BaiduId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_BaiduId& default_instance();

  void Swap(BidRequest_BaiduId* other);

  // implements Message ----------------------------------------------

  BidRequest_BaiduId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_BaiduId& from);
  void MergeFrom(const BidRequest_BaiduId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string baidu_user_id = 1;
  inline bool has_baidu_user_id() const;
  inline void clear_baidu_user_id();
  static const int kBaiduUserIdFieldNumber = 1;
  inline const ::std::string& baidu_user_id() const;
  inline void set_baidu_user_id(const ::std::string& value);
  inline void set_baidu_user_id(const char* value);
  inline void set_baidu_user_id(const char* value, size_t size);
  inline ::std::string* mutable_baidu_user_id();
  inline ::std::string* release_baidu_user_id();
  inline void set_allocated_baidu_user_id(::std::string* baidu_user_id);

  // optional int32 baidu_user_id_version = 2;
  inline bool has_baidu_user_id_version() const;
  inline void clear_baidu_user_id_version();
  static const int kBaiduUserIdVersionFieldNumber = 2;
  inline ::google::protobuf::int32 baidu_user_id_version() const;
  inline void set_baidu_user_id_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidRequest.BaiduId)
 private:
  inline void set_has_baidu_user_id();
  inline void clear_has_baidu_user_id();
  inline void set_has_baidu_user_id_version();
  inline void clear_has_baidu_user_id_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* baidu_user_id_;
  ::google::protobuf::int32 baidu_user_id_version_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_BaiduId* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Geo_Coordinate : public ::google::protobuf::Message {
 public:
  BidRequest_Geo_Coordinate();
  virtual ~BidRequest_Geo_Coordinate();

  BidRequest_Geo_Coordinate(const BidRequest_Geo_Coordinate& from);

  inline BidRequest_Geo_Coordinate& operator=(const BidRequest_Geo_Coordinate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Geo_Coordinate& default_instance();

  void Swap(BidRequest_Geo_Coordinate* other);

  // implements Message ----------------------------------------------

  BidRequest_Geo_Coordinate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Geo_Coordinate& from);
  void MergeFrom(const BidRequest_Geo_Coordinate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Geo_Coordinate_Standard Standard;
  static const Standard BD_09 = BidRequest_Geo_Coordinate_Standard_BD_09;
  static const Standard GCJ_02 = BidRequest_Geo_Coordinate_Standard_GCJ_02;
  static const Standard WGS_84 = BidRequest_Geo_Coordinate_Standard_WGS_84;
  static const Standard BD_09_LL = BidRequest_Geo_Coordinate_Standard_BD_09_LL;
  static inline bool Standard_IsValid(int value) {
    return BidRequest_Geo_Coordinate_Standard_IsValid(value);
  }
  static const Standard Standard_MIN =
    BidRequest_Geo_Coordinate_Standard_Standard_MIN;
  static const Standard Standard_MAX =
    BidRequest_Geo_Coordinate_Standard_Standard_MAX;
  static const int Standard_ARRAYSIZE =
    BidRequest_Geo_Coordinate_Standard_Standard_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Standard_descriptor() {
    return BidRequest_Geo_Coordinate_Standard_descriptor();
  }
  static inline const ::std::string& Standard_Name(Standard value) {
    return BidRequest_Geo_Coordinate_Standard_Name(value);
  }
  static inline bool Standard_Parse(const ::std::string& name,
      Standard* value) {
    return BidRequest_Geo_Coordinate_Standard_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BidRequest.Geo.Coordinate.Standard standard = 1;
  inline bool has_standard() const;
  inline void clear_standard();
  static const int kStandardFieldNumber = 1;
  inline ::BidRequest_Geo_Coordinate_Standard standard() const;
  inline void set_standard(::BidRequest_Geo_Coordinate_Standard value);

  // optional float latitude = 2;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  inline float latitude() const;
  inline void set_latitude(float value);

  // optional float longitude = 3;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  inline float longitude() const;
  inline void set_longitude(float value);

  // @@protoc_insertion_point(class_scope:BidRequest.Geo.Coordinate)
 private:
  inline void set_has_standard();
  inline void clear_has_standard();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int standard_;
  float latitude_;
  float longitude_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Geo_Coordinate* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Geo_UserLocation : public ::google::protobuf::Message {
 public:
  BidRequest_Geo_UserLocation();
  virtual ~BidRequest_Geo_UserLocation();

  BidRequest_Geo_UserLocation(const BidRequest_Geo_UserLocation& from);

  inline BidRequest_Geo_UserLocation& operator=(const BidRequest_Geo_UserLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Geo_UserLocation& default_instance();

  void Swap(BidRequest_Geo_UserLocation* other);

  // implements Message ----------------------------------------------

  BidRequest_Geo_UserLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Geo_UserLocation& from);
  void MergeFrom(const BidRequest_Geo_UserLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string province = 1;
  inline bool has_province() const;
  inline void clear_province();
  static const int kProvinceFieldNumber = 1;
  inline const ::std::string& province() const;
  inline void set_province(const ::std::string& value);
  inline void set_province(const char* value);
  inline void set_province(const char* value, size_t size);
  inline ::std::string* mutable_province();
  inline ::std::string* release_province();
  inline void set_allocated_province(::std::string* province);

  // optional string city = 2;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 2;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string district = 3;
  inline bool has_district() const;
  inline void clear_district();
  static const int kDistrictFieldNumber = 3;
  inline const ::std::string& district() const;
  inline void set_district(const ::std::string& value);
  inline void set_district(const char* value);
  inline void set_district(const char* value, size_t size);
  inline ::std::string* mutable_district();
  inline ::std::string* release_district();
  inline void set_allocated_district(::std::string* district);

  // optional string street = 4;
  inline bool has_street() const;
  inline void clear_street();
  static const int kStreetFieldNumber = 4;
  inline const ::std::string& street() const;
  inline void set_street(const ::std::string& value);
  inline void set_street(const char* value);
  inline void set_street(const char* value, size_t size);
  inline ::std::string* mutable_street();
  inline ::std::string* release_street();
  inline void set_allocated_street(::std::string* street);

  // @@protoc_insertion_point(class_scope:BidRequest.Geo.UserLocation)
 private:
  inline void set_has_province();
  inline void clear_has_province();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_district();
  inline void clear_has_district();
  inline void set_has_street();
  inline void clear_has_street();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* province_;
  ::std::string* city_;
  ::std::string* district_;
  ::std::string* street_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Geo_UserLocation* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Geo : public ::google::protobuf::Message {
 public:
  BidRequest_Geo();
  virtual ~BidRequest_Geo();

  BidRequest_Geo(const BidRequest_Geo& from);

  inline BidRequest_Geo& operator=(const BidRequest_Geo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Geo& default_instance();

  void Swap(BidRequest_Geo* other);

  // implements Message ----------------------------------------------

  BidRequest_Geo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Geo& from);
  void MergeFrom(const BidRequest_Geo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Geo_Coordinate Coordinate;
  typedef BidRequest_Geo_UserLocation UserLocation;

  // accessors -------------------------------------------------------

  // repeated .BidRequest.Geo.Coordinate user_coordinate = 1;
  inline int user_coordinate_size() const;
  inline void clear_user_coordinate();
  static const int kUserCoordinateFieldNumber = 1;
  inline const ::BidRequest_Geo_Coordinate& user_coordinate(int index) const;
  inline ::BidRequest_Geo_Coordinate* mutable_user_coordinate(int index);
  inline ::BidRequest_Geo_Coordinate* add_user_coordinate();
  inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Geo_Coordinate >&
      user_coordinate() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Geo_Coordinate >*
      mutable_user_coordinate();

  // optional .BidRequest.Geo.UserLocation user_location = 2;
  inline bool has_user_location() const;
  inline void clear_user_location();
  static const int kUserLocationFieldNumber = 2;
  inline const ::BidRequest_Geo_UserLocation& user_location() const;
  inline ::BidRequest_Geo_UserLocation* mutable_user_location();
  inline ::BidRequest_Geo_UserLocation* release_user_location();
  inline void set_allocated_user_location(::BidRequest_Geo_UserLocation* user_location);

  // @@protoc_insertion_point(class_scope:BidRequest.Geo)
 private:
  inline void set_has_user_location();
  inline void clear_has_user_location();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Geo_Coordinate > user_coordinate_;
  ::BidRequest_Geo_UserLocation* user_location_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Geo* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile_MobileID : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile_MobileID();
  virtual ~BidRequest_Mobile_MobileID();

  BidRequest_Mobile_MobileID(const BidRequest_Mobile_MobileID& from);

  inline BidRequest_Mobile_MobileID& operator=(const BidRequest_Mobile_MobileID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_MobileID& default_instance();

  void Swap(BidRequest_Mobile_MobileID* other);

  // implements Message ----------------------------------------------

  BidRequest_Mobile_MobileID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_MobileID& from);
  void MergeFrom(const BidRequest_Mobile_MobileID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_MobileID_IDType IDType;
  static const IDType UNKNOWN = BidRequest_Mobile_MobileID_IDType_UNKNOWN;
  static const IDType IMEI = BidRequest_Mobile_MobileID_IDType_IMEI;
  static const IDType MAC = BidRequest_Mobile_MobileID_IDType_MAC;
  static inline bool IDType_IsValid(int value) {
    return BidRequest_Mobile_MobileID_IDType_IsValid(value);
  }
  static const IDType IDType_MIN =
    BidRequest_Mobile_MobileID_IDType_IDType_MIN;
  static const IDType IDType_MAX =
    BidRequest_Mobile_MobileID_IDType_IDType_MAX;
  static const int IDType_ARRAYSIZE =
    BidRequest_Mobile_MobileID_IDType_IDType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IDType_descriptor() {
    return BidRequest_Mobile_MobileID_IDType_descriptor();
  }
  static inline const ::std::string& IDType_Name(IDType value) {
    return BidRequest_Mobile_MobileID_IDType_Name(value);
  }
  static inline bool IDType_Parse(const ::std::string& name,
      IDType* value) {
    return BidRequest_Mobile_MobileID_IDType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BidRequest.Mobile.MobileID.IDType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::BidRequest_Mobile_MobileID_IDType type() const;
  inline void set_type(::BidRequest_Mobile_MobileID_IDType value);

  // optional string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile.MobileID)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  int type_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile_MobileID* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile_DeviceOsVersion : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile_DeviceOsVersion();
  virtual ~BidRequest_Mobile_DeviceOsVersion();

  BidRequest_Mobile_DeviceOsVersion(const BidRequest_Mobile_DeviceOsVersion& from);

  inline BidRequest_Mobile_DeviceOsVersion& operator=(const BidRequest_Mobile_DeviceOsVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_DeviceOsVersion& default_instance();

  void Swap(BidRequest_Mobile_DeviceOsVersion* other);

  // implements Message ----------------------------------------------

  BidRequest_Mobile_DeviceOsVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  void MergeFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 os_version_major = 1;
  inline bool has_os_version_major() const;
  inline void clear_os_version_major();
  static const int kOsVersionMajorFieldNumber = 1;
  inline ::google::protobuf::int32 os_version_major() const;
  inline void set_os_version_major(::google::protobuf::int32 value);

  // optional int32 os_version_minor = 2;
  inline bool has_os_version_minor() const;
  inline void clear_os_version_minor();
  static const int kOsVersionMinorFieldNumber = 2;
  inline ::google::protobuf::int32 os_version_minor() const;
  inline void set_os_version_minor(::google::protobuf::int32 value);

  // optional int32 os_version_micro = 3;
  inline bool has_os_version_micro() const;
  inline void clear_os_version_micro();
  static const int kOsVersionMicroFieldNumber = 3;
  inline ::google::protobuf::int32 os_version_micro() const;
  inline void set_os_version_micro(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile.DeviceOsVersion)
 private:
  inline void set_has_os_version_major();
  inline void clear_has_os_version_major();
  inline void set_has_os_version_minor();
  inline void clear_has_os_version_minor();
  inline void set_has_os_version_micro();
  inline void clear_has_os_version_micro();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 os_version_major_;
  ::google::protobuf::int32 os_version_minor_;
  ::google::protobuf::int32 os_version_micro_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile_DeviceOsVersion* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile_ForAdvertisingID : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile_ForAdvertisingID();
  virtual ~BidRequest_Mobile_ForAdvertisingID();

  BidRequest_Mobile_ForAdvertisingID(const BidRequest_Mobile_ForAdvertisingID& from);

  inline BidRequest_Mobile_ForAdvertisingID& operator=(const BidRequest_Mobile_ForAdvertisingID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_ForAdvertisingID& default_instance();

  void Swap(BidRequest_Mobile_ForAdvertisingID* other);

  // implements Message ----------------------------------------------

  BidRequest_Mobile_ForAdvertisingID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_ForAdvertisingID& from);
  void MergeFrom(const BidRequest_Mobile_ForAdvertisingID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_ForAdvertisingID_IDType IDType;
  static const IDType UNKNOWN = BidRequest_Mobile_ForAdvertisingID_IDType_UNKNOWN;
  static const IDType ANDROID_ID = BidRequest_Mobile_ForAdvertisingID_IDType_ANDROID_ID;
  static const IDType IDFA = BidRequest_Mobile_ForAdvertisingID_IDType_IDFA;
  static inline bool IDType_IsValid(int value) {
    return BidRequest_Mobile_ForAdvertisingID_IDType_IsValid(value);
  }
  static const IDType IDType_MIN =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MIN;
  static const IDType IDType_MAX =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MAX;
  static const int IDType_ARRAYSIZE =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IDType_descriptor() {
    return BidRequest_Mobile_ForAdvertisingID_IDType_descriptor();
  }
  static inline const ::std::string& IDType_Name(IDType value) {
    return BidRequest_Mobile_ForAdvertisingID_IDType_Name(value);
  }
  static inline bool IDType_Parse(const ::std::string& name,
      IDType* value) {
    return BidRequest_Mobile_ForAdvertisingID_IDType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BidRequest.Mobile.ForAdvertisingID.IDType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::BidRequest_Mobile_ForAdvertisingID_IDType type() const;
  inline void set_type(::BidRequest_Mobile_ForAdvertisingID_IDType value);

  // optional string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile.ForAdvertisingID)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  int type_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile_ForAdvertisingID* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile_MobileApp : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile_MobileApp();
  virtual ~BidRequest_Mobile_MobileApp();

  BidRequest_Mobile_MobileApp(const BidRequest_Mobile_MobileApp& from);

  inline BidRequest_Mobile_MobileApp& operator=(const BidRequest_Mobile_MobileApp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_MobileApp& default_instance();

  void Swap(BidRequest_Mobile_MobileApp* other);

  // implements Message ----------------------------------------------

  BidRequest_Mobile_MobileApp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_MobileApp& from);
  void MergeFrom(const BidRequest_Mobile_MobileApp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_MobileApp_AppInteractionType AppInteractionType;
  static const AppInteractionType TELEPHONE = BidRequest_Mobile_MobileApp_AppInteractionType_TELEPHONE;
  static const AppInteractionType DOWNLOAD = BidRequest_Mobile_MobileApp_AppInteractionType_DOWNLOAD;
  static inline bool AppInteractionType_IsValid(int value) {
    return BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(value);
  }
  static const AppInteractionType AppInteractionType_MIN =
    BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MIN;
  static const AppInteractionType AppInteractionType_MAX =
    BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MAX;
  static const int AppInteractionType_ARRAYSIZE =
    BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AppInteractionType_descriptor() {
    return BidRequest_Mobile_MobileApp_AppInteractionType_descriptor();
  }
  static inline const ::std::string& AppInteractionType_Name(AppInteractionType value) {
    return BidRequest_Mobile_MobileApp_AppInteractionType_Name(value);
  }
  static inline bool AppInteractionType_Parse(const ::std::string& name,
      AppInteractionType* value) {
    return BidRequest_Mobile_MobileApp_AppInteractionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline const ::std::string& app_id() const;
  inline void set_app_id(const ::std::string& value);
  inline void set_app_id(const char* value);
  inline void set_app_id(const char* value, size_t size);
  inline ::std::string* mutable_app_id();
  inline ::std::string* release_app_id();
  inline void set_allocated_app_id(::std::string* app_id);

  // optional string app_bundle_id = 2;
  inline bool has_app_bundle_id() const;
  inline void clear_app_bundle_id();
  static const int kAppBundleIdFieldNumber = 2;
  inline const ::std::string& app_bundle_id() const;
  inline void set_app_bundle_id(const ::std::string& value);
  inline void set_app_bundle_id(const char* value);
  inline void set_app_bundle_id(const char* value, size_t size);
  inline ::std::string* mutable_app_bundle_id();
  inline ::std::string* release_app_bundle_id();
  inline void set_allocated_app_bundle_id(::std::string* app_bundle_id);

  // optional int32 app_category = 3;
  inline bool has_app_category() const;
  inline void clear_app_category();
  static const int kAppCategoryFieldNumber = 3;
  inline ::google::protobuf::int32 app_category() const;
  inline void set_app_category(::google::protobuf::int32 value);

  // optional int32 app_publisher_id = 4;
  inline bool has_app_publisher_id() const;
  inline void clear_app_publisher_id();
  static const int kAppPublisherIdFieldNumber = 4;
  inline ::google::protobuf::int32 app_publisher_id() const;
  inline void set_app_publisher_id(::google::protobuf::int32 value);

  // repeated .BidRequest.Mobile.MobileApp.AppInteractionType app_interaction_type = 5;
  inline int app_interaction_type_size() const;
  inline void clear_app_interaction_type();
  static const int kAppInteractionTypeFieldNumber = 5;
  inline ::BidRequest_Mobile_MobileApp_AppInteractionType app_interaction_type(int index) const;
  inline void set_app_interaction_type(int index, ::BidRequest_Mobile_MobileApp_AppInteractionType value);
  inline void add_app_interaction_type(::BidRequest_Mobile_MobileApp_AppInteractionType value);
  inline const ::google::protobuf::RepeatedField<int>& app_interaction_type() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_app_interaction_type();

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile.MobileApp)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_app_bundle_id();
  inline void clear_has_app_bundle_id();
  inline void set_has_app_category();
  inline void clear_has_app_category();
  inline void set_has_app_publisher_id();
  inline void clear_has_app_publisher_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* app_id_;
  ::std::string* app_bundle_id_;
  ::google::protobuf::int32 app_category_;
  ::google::protobuf::int32 app_publisher_id_;
  ::google::protobuf::RepeatedField<int> app_interaction_type_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile_MobileApp* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile : public ::google::protobuf::Message {
 public:
  BidRequest_Mobile();
  virtual ~BidRequest_Mobile();

  BidRequest_Mobile(const BidRequest_Mobile& from);

  inline BidRequest_Mobile& operator=(const BidRequest_Mobile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile& default_instance();

  void Swap(BidRequest_Mobile* other);

  // implements Message ----------------------------------------------

  BidRequest_Mobile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile& from);
  void MergeFrom(const BidRequest_Mobile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_MobileID MobileID;
  typedef BidRequest_Mobile_DeviceOsVersion DeviceOsVersion;
  typedef BidRequest_Mobile_ForAdvertisingID ForAdvertisingID;
  typedef BidRequest_Mobile_MobileApp MobileApp;

  typedef BidRequest_Mobile_MobileDeviceType MobileDeviceType;
  static const MobileDeviceType UNKNOWN_DEVICE = BidRequest_Mobile_MobileDeviceType_UNKNOWN_DEVICE;
  static const MobileDeviceType HIGHEND_PHONE = BidRequest_Mobile_MobileDeviceType_HIGHEND_PHONE;
  static const MobileDeviceType TABLET = BidRequest_Mobile_MobileDeviceType_TABLET;
  static inline bool MobileDeviceType_IsValid(int value) {
    return BidRequest_Mobile_MobileDeviceType_IsValid(value);
  }
  static const MobileDeviceType MobileDeviceType_MIN =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MIN;
  static const MobileDeviceType MobileDeviceType_MAX =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX;
  static const int MobileDeviceType_ARRAYSIZE =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MobileDeviceType_descriptor() {
    return BidRequest_Mobile_MobileDeviceType_descriptor();
  }
  static inline const ::std::string& MobileDeviceType_Name(MobileDeviceType value) {
    return BidRequest_Mobile_MobileDeviceType_Name(value);
  }
  static inline bool MobileDeviceType_Parse(const ::std::string& name,
      MobileDeviceType* value) {
    return BidRequest_Mobile_MobileDeviceType_Parse(name, value);
  }

  typedef BidRequest_Mobile_OS OS;
  static const OS UNKNOWN_OS = BidRequest_Mobile_OS_UNKNOWN_OS;
  static const OS IOS = BidRequest_Mobile_OS_IOS;
  static const OS ANDROID = BidRequest_Mobile_OS_ANDROID;
  static const OS WINDOWS_PHONE = BidRequest_Mobile_OS_WINDOWS_PHONE;
  static inline bool OS_IsValid(int value) {
    return BidRequest_Mobile_OS_IsValid(value);
  }
  static const OS OS_MIN =
    BidRequest_Mobile_OS_OS_MIN;
  static const OS OS_MAX =
    BidRequest_Mobile_OS_OS_MAX;
  static const int OS_ARRAYSIZE =
    BidRequest_Mobile_OS_OS_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OS_descriptor() {
    return BidRequest_Mobile_OS_descriptor();
  }
  static inline const ::std::string& OS_Name(OS value) {
    return BidRequest_Mobile_OS_Name(value);
  }
  static inline bool OS_Parse(const ::std::string& name,
      OS* value) {
    return BidRequest_Mobile_OS_Parse(name, value);
  }

  typedef BidRequest_Mobile_WirelessNetworkType WirelessNetworkType;
  static const WirelessNetworkType UNKNOWN_NETWORK = BidRequest_Mobile_WirelessNetworkType_UNKNOWN_NETWORK;
  static const WirelessNetworkType WIFI = BidRequest_Mobile_WirelessNetworkType_WIFI;
  static const WirelessNetworkType MOBILE_2G = BidRequest_Mobile_WirelessNetworkType_MOBILE_2G;
  static const WirelessNetworkType MOBILE_3G = BidRequest_Mobile_WirelessNetworkType_MOBILE_3G;
  static const WirelessNetworkType MOBILE_4G = BidRequest_Mobile_WirelessNetworkType_MOBILE_4G;
  static inline bool WirelessNetworkType_IsValid(int value) {
    return BidRequest_Mobile_WirelessNetworkType_IsValid(value);
  }
  static const WirelessNetworkType WirelessNetworkType_MIN =
    BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MIN;
  static const WirelessNetworkType WirelessNetworkType_MAX =
    BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MAX;
  static const int WirelessNetworkType_ARRAYSIZE =
    BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WirelessNetworkType_descriptor() {
    return BidRequest_Mobile_WirelessNetworkType_descriptor();
  }
  static inline const ::std::string& WirelessNetworkType_Name(WirelessNetworkType value) {
    return BidRequest_Mobile_WirelessNetworkType_Name(value);
  }
  static inline bool WirelessNetworkType_Parse(const ::std::string& name,
      WirelessNetworkType* value) {
    return BidRequest_Mobile_WirelessNetworkType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string DEPRECATED_device_id = 1;
  inline bool has_deprecated_device_id() const;
  inline void clear_deprecated_device_id();
  static const int kDEPRECATEDDeviceIdFieldNumber = 1;
  inline const ::std::string& deprecated_device_id() const;
  inline void set_deprecated_device_id(const ::std::string& value);
  inline void set_deprecated_device_id(const char* value);
  inline void set_deprecated_device_id(const char* value, size_t size);
  inline ::std::string* mutable_deprecated_device_id();
  inline ::std::string* release_deprecated_device_id();
  inline void set_allocated_deprecated_device_id(::std::string* deprecated_device_id);

  // repeated .BidRequest.Mobile.MobileID id = 13;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 13;
  inline const ::BidRequest_Mobile_MobileID& id(int index) const;
  inline ::BidRequest_Mobile_MobileID* mutable_id(int index);
  inline ::BidRequest_Mobile_MobileID* add_id();
  inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_MobileID >&
      id() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_MobileID >*
      mutable_id();

  // optional .BidRequest.Mobile.MobileDeviceType device_type = 2;
  inline bool has_device_type() const;
  inline void clear_device_type();
  static const int kDeviceTypeFieldNumber = 2;
  inline ::BidRequest_Mobile_MobileDeviceType device_type() const;
  inline void set_device_type(::BidRequest_Mobile_MobileDeviceType value);

  // optional .BidRequest.Mobile.OS platform = 3 [default = UNKNOWN_OS];
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 3;
  inline ::BidRequest_Mobile_OS platform() const;
  inline void set_platform(::BidRequest_Mobile_OS value);

  // optional .BidRequest.Mobile.DeviceOsVersion os_version = 4;
  inline bool has_os_version() const;
  inline void clear_os_version();
  static const int kOsVersionFieldNumber = 4;
  inline const ::BidRequest_Mobile_DeviceOsVersion& os_version() const;
  inline ::BidRequest_Mobile_DeviceOsVersion* mutable_os_version();
  inline ::BidRequest_Mobile_DeviceOsVersion* release_os_version();
  inline void set_allocated_os_version(::BidRequest_Mobile_DeviceOsVersion* os_version);

  // optional string brand = 5;
  inline bool has_brand() const;
  inline void clear_brand();
  static const int kBrandFieldNumber = 5;
  inline const ::std::string& brand() const;
  inline void set_brand(const ::std::string& value);
  inline void set_brand(const char* value);
  inline void set_brand(const char* value, size_t size);
  inline ::std::string* mutable_brand();
  inline ::std::string* release_brand();
  inline void set_allocated_brand(::std::string* brand);

  // optional string model = 6;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 6;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  inline ::std::string* release_model();
  inline void set_allocated_model(::std::string* model);

  // optional int32 screen_width = 7;
  inline bool has_screen_width() const;
  inline void clear_screen_width();
  static const int kScreenWidthFieldNumber = 7;
  inline ::google::protobuf::int32 screen_width() const;
  inline void set_screen_width(::google::protobuf::int32 value);

  // optional int32 screen_height = 8;
  inline bool has_screen_height() const;
  inline void clear_screen_height();
  static const int kScreenHeightFieldNumber = 8;
  inline ::google::protobuf::int32 screen_height() const;
  inline void set_screen_height(::google::protobuf::int32 value);

  // optional int64 carrier_id = 9;
  inline bool has_carrier_id() const;
  inline void clear_carrier_id();
  static const int kCarrierIdFieldNumber = 9;
  inline ::google::protobuf::int64 carrier_id() const;
  inline void set_carrier_id(::google::protobuf::int64 value);

  // optional .BidRequest.Mobile.WirelessNetworkType wireless_network_type = 10;
  inline bool has_wireless_network_type() const;
  inline void clear_wireless_network_type();
  static const int kWirelessNetworkTypeFieldNumber = 10;
  inline ::BidRequest_Mobile_WirelessNetworkType wireless_network_type() const;
  inline void set_wireless_network_type(::BidRequest_Mobile_WirelessNetworkType value);

  // optional string DEPRECATED_for_advertising_id = 11;
  inline bool has_deprecated_for_advertising_id() const;
  inline void clear_deprecated_for_advertising_id();
  static const int kDEPRECATEDForAdvertisingIdFieldNumber = 11;
  inline const ::std::string& deprecated_for_advertising_id() const;
  inline void set_deprecated_for_advertising_id(const ::std::string& value);
  inline void set_deprecated_for_advertising_id(const char* value);
  inline void set_deprecated_for_advertising_id(const char* value, size_t size);
  inline ::std::string* mutable_deprecated_for_advertising_id();
  inline ::std::string* release_deprecated_for_advertising_id();
  inline void set_allocated_deprecated_for_advertising_id(::std::string* deprecated_for_advertising_id);

  // repeated .BidRequest.Mobile.ForAdvertisingID for_advertising_id = 14;
  inline int for_advertising_id_size() const;
  inline void clear_for_advertising_id();
  static const int kForAdvertisingIdFieldNumber = 14;
  inline const ::BidRequest_Mobile_ForAdvertisingID& for_advertising_id(int index) const;
  inline ::BidRequest_Mobile_ForAdvertisingID* mutable_for_advertising_id(int index);
  inline ::BidRequest_Mobile_ForAdvertisingID* add_for_advertising_id();
  inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_ForAdvertisingID >&
      for_advertising_id() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_ForAdvertisingID >*
      mutable_for_advertising_id();

  // optional .BidRequest.Mobile.MobileApp mobile_app = 12;
  inline bool has_mobile_app() const;
  inline void clear_mobile_app();
  static const int kMobileAppFieldNumber = 12;
  inline const ::BidRequest_Mobile_MobileApp& mobile_app() const;
  inline ::BidRequest_Mobile_MobileApp* mutable_mobile_app();
  inline ::BidRequest_Mobile_MobileApp* release_mobile_app();
  inline void set_allocated_mobile_app(::BidRequest_Mobile_MobileApp* mobile_app);

  // @@protoc_insertion_point(class_scope:BidRequest.Mobile)
 private:
  inline void set_has_deprecated_device_id();
  inline void clear_has_deprecated_device_id();
  inline void set_has_device_type();
  inline void clear_has_device_type();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_os_version();
  inline void clear_has_os_version();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_screen_width();
  inline void clear_has_screen_width();
  inline void set_has_screen_height();
  inline void clear_has_screen_height();
  inline void set_has_carrier_id();
  inline void clear_has_carrier_id();
  inline void set_has_wireless_network_type();
  inline void clear_has_wireless_network_type();
  inline void set_has_deprecated_for_advertising_id();
  inline void clear_has_deprecated_for_advertising_id();
  inline void set_has_mobile_app();
  inline void clear_has_mobile_app();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* deprecated_device_id_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_MobileID > id_;
  int device_type_;
  int platform_;
  ::BidRequest_Mobile_DeviceOsVersion* os_version_;
  ::std::string* brand_;
  ::std::string* model_;
  ::google::protobuf::int32 screen_width_;
  ::google::protobuf::int32 screen_height_;
  ::google::protobuf::int64 carrier_id_;
  ::std::string* deprecated_for_advertising_id_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_ForAdvertisingID > for_advertising_id_;
  ::BidRequest_Mobile_MobileApp* mobile_app_;
  int wireless_network_type_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Video : public ::google::protobuf::Message {
 public:
  BidRequest_Video();
  virtual ~BidRequest_Video();

  BidRequest_Video(const BidRequest_Video& from);

  inline BidRequest_Video& operator=(const BidRequest_Video& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Video& default_instance();

  void Swap(BidRequest_Video* other);

  // implements Message ----------------------------------------------

  BidRequest_Video* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Video& from);
  void MergeFrom(const BidRequest_Video& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // repeated string tags = 2;
  inline int tags_size() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 2;
  inline const ::std::string& tags(int index) const;
  inline ::std::string* mutable_tags(int index);
  inline void set_tags(int index, const ::std::string& value);
  inline void set_tags(int index, const char* value);
  inline void set_tags(int index, const char* value, size_t size);
  inline ::std::string* add_tags();
  inline void add_tags(const ::std::string& value);
  inline void add_tags(const char* value);
  inline void add_tags(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // optional int32 content_length = 3;
  inline bool has_content_length() const;
  inline void clear_content_length();
  static const int kContentLengthFieldNumber = 3;
  inline ::google::protobuf::int32 content_length() const;
  inline void set_content_length(::google::protobuf::int32 value);

  // repeated int64 channel_id = 4;
  inline int channel_id_size() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  inline ::google::protobuf::int64 channel_id(int index) const;
  inline void set_channel_id(int index, ::google::protobuf::int64 value);
  inline void add_channel_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      channel_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_channel_id();

  // @@protoc_insertion_point(class_scope:BidRequest.Video)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content_length();
  inline void clear_has_content_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > channel_id_;
  ::google::protobuf::int32 content_length_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Video* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_VideoInfo : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_VideoInfo();
  virtual ~BidRequest_AdSlot_VideoInfo();

  BidRequest_AdSlot_VideoInfo(const BidRequest_AdSlot_VideoInfo& from);

  inline BidRequest_AdSlot_VideoInfo& operator=(const BidRequest_AdSlot_VideoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_VideoInfo& default_instance();

  void Swap(BidRequest_AdSlot_VideoInfo* other);

  // implements Message ----------------------------------------------

  BidRequest_AdSlot_VideoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_VideoInfo& from);
  void MergeFrom(const BidRequest_AdSlot_VideoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_video_duration = 1;
  inline bool has_max_video_duration() const;
  inline void clear_max_video_duration();
  static const int kMaxVideoDurationFieldNumber = 1;
  inline ::google::protobuf::int32 max_video_duration() const;
  inline void set_max_video_duration(::google::protobuf::int32 value);

  // optional int32 min_video_duration = 2;
  inline bool has_min_video_duration() const;
  inline void clear_min_video_duration();
  static const int kMinVideoDurationFieldNumber = 2;
  inline ::google::protobuf::int32 min_video_duration() const;
  inline void set_min_video_duration(::google::protobuf::int32 value);

  // optional int32 video_start_delay = 3;
  inline bool has_video_start_delay() const;
  inline void clear_video_start_delay();
  static const int kVideoStartDelayFieldNumber = 3;
  inline ::google::protobuf::int32 video_start_delay() const;
  inline void set_video_start_delay(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.VideoInfo)
 private:
  inline void set_has_max_video_duration();
  inline void clear_has_max_video_duration();
  inline void set_has_min_video_duration();
  inline void clear_has_min_video_duration();
  inline void set_has_video_start_delay();
  inline void clear_has_video_start_delay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 max_video_duration_;
  ::google::protobuf::int32 min_video_duration_;
  ::google::protobuf::int32 video_start_delay_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_VideoInfo* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_LinkUnitInfo : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_LinkUnitInfo();
  virtual ~BidRequest_AdSlot_LinkUnitInfo();

  BidRequest_AdSlot_LinkUnitInfo(const BidRequest_AdSlot_LinkUnitInfo& from);

  inline BidRequest_AdSlot_LinkUnitInfo& operator=(const BidRequest_AdSlot_LinkUnitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_LinkUnitInfo& default_instance();

  void Swap(BidRequest_AdSlot_LinkUnitInfo* other);

  // implements Message ----------------------------------------------

  BidRequest_AdSlot_LinkUnitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_LinkUnitInfo& from);
  void MergeFrom(const BidRequest_AdSlot_LinkUnitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 style_type = 1;
  inline int style_type_size() const;
  inline void clear_style_type();
  static const int kStyleTypeFieldNumber = 1;
  inline ::google::protobuf::int32 style_type(int index) const;
  inline void set_style_type(int index, ::google::protobuf::int32 value);
  inline void add_style_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      style_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_style_type();

  // optional int32 req_keyword_num = 2;
  inline bool has_req_keyword_num() const;
  inline void clear_req_keyword_num();
  static const int kReqKeywordNumFieldNumber = 2;
  inline ::google::protobuf::int32 req_keyword_num() const;
  inline void set_req_keyword_num(::google::protobuf::int32 value);

  // repeated string proposed_keyword = 3;
  inline int proposed_keyword_size() const;
  inline void clear_proposed_keyword();
  static const int kProposedKeywordFieldNumber = 3;
  inline const ::std::string& proposed_keyword(int index) const;
  inline ::std::string* mutable_proposed_keyword(int index);
  inline void set_proposed_keyword(int index, const ::std::string& value);
  inline void set_proposed_keyword(int index, const char* value);
  inline void set_proposed_keyword(int index, const char* value, size_t size);
  inline ::std::string* add_proposed_keyword();
  inline void add_proposed_keyword(const ::std::string& value);
  inline void add_proposed_keyword(const char* value);
  inline void add_proposed_keyword(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& proposed_keyword() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_proposed_keyword();

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.LinkUnitInfo)
 private:
  inline void set_has_req_keyword_num();
  inline void clear_has_req_keyword_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > style_type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> proposed_keyword_;
  ::google::protobuf::int32 req_keyword_num_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_LinkUnitInfo* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder();
  virtual ~BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder();

  BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);

  inline BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& operator=(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& default_instance();

  void Swap(BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* other);

  // implements Message ----------------------------------------------

  BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);
  void MergeFrom(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string order_id = 1;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  inline const ::std::string& order_id() const;
  inline void set_order_id(const ::std::string& value);
  inline void set_order_id(const char* value);
  inline void set_order_id(const char* value, size_t size);
  inline ::std::string* mutable_order_id();
  inline ::std::string* release_order_id();
  inline void set_allocated_order_id(::std::string* order_id);

  // optional int64 fixed_cpm = 2;
  inline bool has_fixed_cpm() const;
  inline void clear_fixed_cpm();
  static const int kFixedCpmFieldNumber = 2;
  inline ::google::protobuf::int64 fixed_cpm() const;
  inline void set_fixed_cpm(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder)
 private:
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_fixed_cpm();
  inline void clear_has_fixed_cpm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* order_id_;
  ::google::protobuf::int64 fixed_cpm_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_PreferredOrderInfo : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_PreferredOrderInfo();
  virtual ~BidRequest_AdSlot_PreferredOrderInfo();

  BidRequest_AdSlot_PreferredOrderInfo(const BidRequest_AdSlot_PreferredOrderInfo& from);

  inline BidRequest_AdSlot_PreferredOrderInfo& operator=(const BidRequest_AdSlot_PreferredOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_PreferredOrderInfo& default_instance();

  void Swap(BidRequest_AdSlot_PreferredOrderInfo* other);

  // implements Message ----------------------------------------------

  BidRequest_AdSlot_PreferredOrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_PreferredOrderInfo& from);
  void MergeFrom(const BidRequest_AdSlot_PreferredOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder PreferredOrder;

  // accessors -------------------------------------------------------

  // repeated .BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder preferred_orders = 1;
  inline int preferred_orders_size() const;
  inline void clear_preferred_orders();
  static const int kPreferredOrdersFieldNumber = 1;
  inline const ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& preferred_orders(int index) const;
  inline ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* mutable_preferred_orders(int index);
  inline ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* add_preferred_orders();
  inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >&
      preferred_orders() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >*
      mutable_preferred_orders();

  // optional bool allow_auction = 2 [default = true];
  inline bool has_allow_auction() const;
  inline void clear_allow_auction();
  static const int kAllowAuctionFieldNumber = 2;
  inline bool allow_auction() const;
  inline void set_allow_auction(bool value);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.PreferredOrderInfo)
 private:
  inline void set_has_allow_auction();
  inline void clear_has_allow_auction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder > preferred_orders_;
  bool allow_auction_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_PreferredOrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_ExpandCreativeInfo : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot_ExpandCreativeInfo();
  virtual ~BidRequest_AdSlot_ExpandCreativeInfo();

  BidRequest_AdSlot_ExpandCreativeInfo(const BidRequest_AdSlot_ExpandCreativeInfo& from);

  inline BidRequest_AdSlot_ExpandCreativeInfo& operator=(const BidRequest_AdSlot_ExpandCreativeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_ExpandCreativeInfo& default_instance();

  void Swap(BidRequest_AdSlot_ExpandCreativeInfo* other);

  // implements Message ----------------------------------------------

  BidRequest_AdSlot_ExpandCreativeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_ExpandCreativeInfo& from);
  void MergeFrom(const BidRequest_AdSlot_ExpandCreativeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_ExpandCreativeInfo_ActionType ActionType;
  static const ActionType HOVER = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_HOVER;
  static const ActionType CLICK = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_CLICK;
  static const ActionType LOAD = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_LOAD;
  static inline bool ActionType_IsValid(int value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Parse(name, value);
  }

  typedef BidRequest_AdSlot_ExpandCreativeInfo_Direction Direction;
  static const Direction EXPAND_NONE = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_NONE;
  static const Direction EXPAND_UP = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_UP;
  static const Direction EXPAND_DOWN = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_DOWN;
  static const Direction EXPAND_LEFT = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_LEFT;
  static const Direction EXPAND_RIGHT = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_RIGHT;
  static inline bool Direction_IsValid(int value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_IsValid(value);
  }
  static const Direction Direction_MIN =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MIN;
  static const Direction Direction_MAX =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MAX;
  static const int Direction_ARRAYSIZE =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Direction_descriptor() {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor();
  }
  static inline const ::std::string& Direction_Name(Direction value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_Name(value);
  }
  static inline bool Direction_Parse(const ::std::string& name,
      Direction* value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .BidRequest.AdSlot.ExpandCreativeInfo.ActionType expand_action_type = 1;
  inline int expand_action_type_size() const;
  inline void clear_expand_action_type();
  static const int kExpandActionTypeFieldNumber = 1;
  inline ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType expand_action_type(int index) const;
  inline void set_expand_action_type(int index, ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value);
  inline void add_expand_action_type(::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value);
  inline const ::google::protobuf::RepeatedField<int>& expand_action_type() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_expand_action_type();

  // optional .BidRequest.AdSlot.ExpandCreativeInfo.Direction expand_direction = 2;
  inline bool has_expand_direction() const;
  inline void clear_expand_direction();
  static const int kExpandDirectionFieldNumber = 2;
  inline ::BidRequest_AdSlot_ExpandCreativeInfo_Direction expand_direction() const;
  inline void set_expand_direction(::BidRequest_AdSlot_ExpandCreativeInfo_Direction value);

  // repeated int32 expand_creative_type = 3 [packed = true];
  inline int expand_creative_type_size() const;
  inline void clear_expand_creative_type();
  static const int kExpandCreativeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 expand_creative_type(int index) const;
  inline void set_expand_creative_type(int index, ::google::protobuf::int32 value);
  inline void add_expand_creative_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      expand_creative_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_expand_creative_type();

  // optional int32 expand_width = 4;
  inline bool has_expand_width() const;
  inline void clear_expand_width();
  static const int kExpandWidthFieldNumber = 4;
  inline ::google::protobuf::int32 expand_width() const;
  inline void set_expand_width(::google::protobuf::int32 value);

  // optional int32 expand_height = 5;
  inline bool has_expand_height() const;
  inline void clear_expand_height();
  static const int kExpandHeightFieldNumber = 5;
  inline ::google::protobuf::int32 expand_height() const;
  inline void set_expand_height(::google::protobuf::int32 value);

  // optional int32 expand_duration = 6;
  inline bool has_expand_duration() const;
  inline void clear_expand_duration();
  static const int kExpandDurationFieldNumber = 6;
  inline ::google::protobuf::int32 expand_duration() const;
  inline void set_expand_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot.ExpandCreativeInfo)
 private:
  inline void set_has_expand_direction();
  inline void clear_has_expand_direction();
  inline void set_has_expand_width();
  inline void clear_has_expand_width();
  inline void set_has_expand_height();
  inline void clear_has_expand_height();
  inline void set_has_expand_duration();
  inline void clear_has_expand_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> expand_action_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > expand_creative_type_;
  mutable int _expand_creative_type_cached_byte_size_;
  int expand_direction_;
  ::google::protobuf::int32 expand_width_;
  ::google::protobuf::int32 expand_height_;
  ::google::protobuf::int32 expand_duration_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_ExpandCreativeInfo* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot : public ::google::protobuf::Message {
 public:
  BidRequest_AdSlot();
  virtual ~BidRequest_AdSlot();

  BidRequest_AdSlot(const BidRequest_AdSlot& from);

  inline BidRequest_AdSlot& operator=(const BidRequest_AdSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot& default_instance();

  void Swap(BidRequest_AdSlot* other);

  // implements Message ----------------------------------------------

  BidRequest_AdSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot& from);
  void MergeFrom(const BidRequest_AdSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_VideoInfo VideoInfo;
  typedef BidRequest_AdSlot_LinkUnitInfo LinkUnitInfo;
  typedef BidRequest_AdSlot_PreferredOrderInfo PreferredOrderInfo;
  typedef BidRequest_AdSlot_ExpandCreativeInfo ExpandCreativeInfo;

  // accessors -------------------------------------------------------

  // optional uint64 ad_block_key = 1;
  inline bool has_ad_block_key() const;
  inline void clear_ad_block_key();
  static const int kAdBlockKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 ad_block_key() const;
  inline void set_ad_block_key(::google::protobuf::uint64 value);

  // optional int32 sequence_id = 2;
  inline bool has_sequence_id() const;
  inline void clear_sequence_id();
  static const int kSequenceIdFieldNumber = 2;
  inline ::google::protobuf::int32 sequence_id() const;
  inline void set_sequence_id(::google::protobuf::int32 value);

  // optional int32 adslot_type = 3;
  inline bool has_adslot_type() const;
  inline void clear_adslot_type();
  static const int kAdslotTypeFieldNumber = 3;
  inline ::google::protobuf::int32 adslot_type() const;
  inline void set_adslot_type(::google::protobuf::int32 value);

  // optional int32 width = 4;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 4;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 5;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 5;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional int32 slot_visibility = 6;
  inline bool has_slot_visibility() const;
  inline void clear_slot_visibility();
  static const int kSlotVisibilityFieldNumber = 6;
  inline ::google::protobuf::int32 slot_visibility() const;
  inline void set_slot_visibility(::google::protobuf::int32 value);

  // repeated int32 creative_type = 7 [packed = true];
  inline int creative_type_size() const;
  inline void clear_creative_type();
  static const int kCreativeTypeFieldNumber = 7;
  inline ::google::protobuf::int32 creative_type(int index) const;
  inline void set_creative_type(int index, ::google::protobuf::int32 value);
  inline void add_creative_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      creative_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_creative_type();

  // repeated string excluded_landing_page_url = 8;
  inline int excluded_landing_page_url_size() const;
  inline void clear_excluded_landing_page_url();
  static const int kExcludedLandingPageUrlFieldNumber = 8;
  inline const ::std::string& excluded_landing_page_url(int index) const;
  inline ::std::string* mutable_excluded_landing_page_url(int index);
  inline void set_excluded_landing_page_url(int index, const ::std::string& value);
  inline void set_excluded_landing_page_url(int index, const char* value);
  inline void set_excluded_landing_page_url(int index, const char* value, size_t size);
  inline ::std::string* add_excluded_landing_page_url();
  inline void add_excluded_landing_page_url(const ::std::string& value);
  inline void add_excluded_landing_page_url(const char* value);
  inline void add_excluded_landing_page_url(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& excluded_landing_page_url() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_excluded_landing_page_url();

  // repeated fixed64 publisher_settings_list_id = 14;
  inline int publisher_settings_list_id_size() const;
  inline void clear_publisher_settings_list_id();
  static const int kPublisherSettingsListIdFieldNumber = 14;
  inline ::google::protobuf::uint64 publisher_settings_list_id(int index) const;
  inline void set_publisher_settings_list_id(int index, ::google::protobuf::uint64 value);
  inline void add_publisher_settings_list_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      publisher_settings_list_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_publisher_settings_list_id();

  // optional int32 minimum_cpm = 9;
  inline bool has_minimum_cpm() const;
  inline void clear_minimum_cpm();
  static const int kMinimumCpmFieldNumber = 9;
  inline ::google::protobuf::int32 minimum_cpm() const;
  inline void set_minimum_cpm(::google::protobuf::int32 value);

  // optional int32 max_video_duration = 10;
  inline bool has_max_video_duration() const;
  inline void clear_max_video_duration();
  static const int kMaxVideoDurationFieldNumber = 10;
  inline ::google::protobuf::int32 max_video_duration() const;
  inline void set_max_video_duration(::google::protobuf::int32 value);

  // optional int32 min_video_duration = 11;
  inline bool has_min_video_duration() const;
  inline void clear_min_video_duration();
  static const int kMinVideoDurationFieldNumber = 11;
  inline ::google::protobuf::int32 min_video_duration() const;
  inline void set_min_video_duration(::google::protobuf::int32 value);

  // optional int32 video_start_delay = 12;
  inline bool has_video_start_delay() const;
  inline void clear_video_start_delay();
  static const int kVideoStartDelayFieldNumber = 12;
  inline ::google::protobuf::int32 video_start_delay() const;
  inline void set_video_start_delay(::google::protobuf::int32 value);

  // optional .BidRequest.AdSlot.VideoInfo video_info = 15;
  inline bool has_video_info() const;
  inline void clear_video_info();
  static const int kVideoInfoFieldNumber = 15;
  inline const ::BidRequest_AdSlot_VideoInfo& video_info() const;
  inline ::BidRequest_AdSlot_VideoInfo* mutable_video_info();
  inline ::BidRequest_AdSlot_VideoInfo* release_video_info();
  inline void set_allocated_video_info(::BidRequest_AdSlot_VideoInfo* video_info);

  // optional .BidRequest.AdSlot.LinkUnitInfo link_unit_info = 16;
  inline bool has_link_unit_info() const;
  inline void clear_link_unit_info();
  static const int kLinkUnitInfoFieldNumber = 16;
  inline const ::BidRequest_AdSlot_LinkUnitInfo& link_unit_info() const;
  inline ::BidRequest_AdSlot_LinkUnitInfo* mutable_link_unit_info();
  inline ::BidRequest_AdSlot_LinkUnitInfo* release_link_unit_info();
  inline void set_allocated_link_unit_info(::BidRequest_AdSlot_LinkUnitInfo* link_unit_info);

  // optional .BidRequest.AdSlot.PreferredOrderInfo preferred_order_info = 13;
  inline bool has_preferred_order_info() const;
  inline void clear_preferred_order_info();
  static const int kPreferredOrderInfoFieldNumber = 13;
  inline const ::BidRequest_AdSlot_PreferredOrderInfo& preferred_order_info() const;
  inline ::BidRequest_AdSlot_PreferredOrderInfo* mutable_preferred_order_info();
  inline ::BidRequest_AdSlot_PreferredOrderInfo* release_preferred_order_info();
  inline void set_allocated_preferred_order_info(::BidRequest_AdSlot_PreferredOrderInfo* preferred_order_info);

  // optional .BidRequest.AdSlot.ExpandCreativeInfo expand_creative_info = 17;
  inline bool has_expand_creative_info() const;
  inline void clear_expand_creative_info();
  static const int kExpandCreativeInfoFieldNumber = 17;
  inline const ::BidRequest_AdSlot_ExpandCreativeInfo& expand_creative_info() const;
  inline ::BidRequest_AdSlot_ExpandCreativeInfo* mutable_expand_creative_info();
  inline ::BidRequest_AdSlot_ExpandCreativeInfo* release_expand_creative_info();
  inline void set_allocated_expand_creative_info(::BidRequest_AdSlot_ExpandCreativeInfo* expand_creative_info);

  // @@protoc_insertion_point(class_scope:BidRequest.AdSlot)
 private:
  inline void set_has_ad_block_key();
  inline void clear_has_ad_block_key();
  inline void set_has_sequence_id();
  inline void clear_has_sequence_id();
  inline void set_has_adslot_type();
  inline void clear_has_adslot_type();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_slot_visibility();
  inline void clear_has_slot_visibility();
  inline void set_has_minimum_cpm();
  inline void clear_has_minimum_cpm();
  inline void set_has_max_video_duration();
  inline void clear_has_max_video_duration();
  inline void set_has_min_video_duration();
  inline void clear_has_min_video_duration();
  inline void set_has_video_start_delay();
  inline void clear_has_video_start_delay();
  inline void set_has_video_info();
  inline void clear_has_video_info();
  inline void set_has_link_unit_info();
  inline void clear_has_link_unit_info();
  inline void set_has_preferred_order_info();
  inline void clear_has_preferred_order_info();
  inline void set_has_expand_creative_info();
  inline void clear_has_expand_creative_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ad_block_key_;
  ::google::protobuf::int32 sequence_id_;
  ::google::protobuf::int32 adslot_type_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > creative_type_;
  mutable int _creative_type_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> excluded_landing_page_url_;
  ::google::protobuf::int32 slot_visibility_;
  ::google::protobuf::int32 minimum_cpm_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > publisher_settings_list_id_;
  ::google::protobuf::int32 max_video_duration_;
  ::google::protobuf::int32 min_video_duration_;
  ::BidRequest_AdSlot_VideoInfo* video_info_;
  ::BidRequest_AdSlot_LinkUnitInfo* link_unit_info_;
  ::BidRequest_AdSlot_PreferredOrderInfo* preferred_order_info_;
  ::BidRequest_AdSlot_ExpandCreativeInfo* expand_creative_info_;
  ::google::protobuf::int32 video_start_delay_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest : public ::google::protobuf::Message {
 public:
  BidRequest();
  virtual ~BidRequest();

  BidRequest(const BidRequest& from);

  inline BidRequest& operator=(const BidRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest& default_instance();

  void Swap(BidRequest* other);

  // implements Message ----------------------------------------------

  BidRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest& from);
  void MergeFrom(const BidRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_BaiduId BaiduId;
  typedef BidRequest_Geo Geo;
  typedef BidRequest_Mobile Mobile;
  typedef BidRequest_Video Video;
  typedef BidRequest_AdSlot AdSlot;

  typedef BidRequest_Gender Gender;
  static const Gender UNKNOWN = BidRequest_Gender_UNKNOWN;
  static const Gender MALE = BidRequest_Gender_MALE;
  static const Gender FEMALE = BidRequest_Gender_FEMALE;
  static inline bool Gender_IsValid(int value) {
    return BidRequest_Gender_IsValid(value);
  }
  static const Gender Gender_MIN =
    BidRequest_Gender_Gender_MIN;
  static const Gender Gender_MAX =
    BidRequest_Gender_Gender_MAX;
  static const int Gender_ARRAYSIZE =
    BidRequest_Gender_Gender_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Gender_descriptor() {
    return BidRequest_Gender_descriptor();
  }
  static inline const ::std::string& Gender_Name(Gender value) {
    return BidRequest_Gender_Name(value);
  }
  static inline bool Gender_Parse(const ::std::string& name,
      Gender* value) {
    return BidRequest_Gender_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional string ip = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 2;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional string user_agent = 3;
  inline bool has_user_agent() const;
  inline void clear_user_agent();
  static const int kUserAgentFieldNumber = 3;
  inline const ::std::string& user_agent() const;
  inline void set_user_agent(const ::std::string& value);
  inline void set_user_agent(const char* value);
  inline void set_user_agent(const char* value, size_t size);
  inline ::std::string* mutable_user_agent();
  inline ::std::string* release_user_agent();
  inline void set_allocated_user_agent(::std::string* user_agent);

  // optional string baidu_user_id = 4;
  inline bool has_baidu_user_id() const;
  inline void clear_baidu_user_id();
  static const int kBaiduUserIdFieldNumber = 4;
  inline const ::std::string& baidu_user_id() const;
  inline void set_baidu_user_id(const ::std::string& value);
  inline void set_baidu_user_id(const char* value);
  inline void set_baidu_user_id(const char* value, size_t size);
  inline ::std::string* mutable_baidu_user_id();
  inline ::std::string* release_baidu_user_id();
  inline void set_allocated_baidu_user_id(::std::string* baidu_user_id);

  // optional int32 baidu_user_id_version = 5;
  inline bool has_baidu_user_id_version() const;
  inline void clear_baidu_user_id_version();
  static const int kBaiduUserIdVersionFieldNumber = 5;
  inline ::google::protobuf::int32 baidu_user_id_version() const;
  inline void set_baidu_user_id_version(::google::protobuf::int32 value);

  // repeated .BidRequest.BaiduId baidu_id_list = 8;
  inline int baidu_id_list_size() const;
  inline void clear_baidu_id_list();
  static const int kBaiduIdListFieldNumber = 8;
  inline const ::BidRequest_BaiduId& baidu_id_list(int index) const;
  inline ::BidRequest_BaiduId* mutable_baidu_id_list(int index);
  inline ::BidRequest_BaiduId* add_baidu_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_BaiduId >&
      baidu_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidRequest_BaiduId >*
      mutable_baidu_id_list();

  // repeated int64 user_category = 6;
  inline int user_category_size() const;
  inline void clear_user_category();
  static const int kUserCategoryFieldNumber = 6;
  inline ::google::protobuf::int64 user_category(int index) const;
  inline void set_user_category(int index, ::google::protobuf::int64 value);
  inline void add_user_category(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      user_category() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_user_category();

  // optional .BidRequest.Gender gender = 7;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 7;
  inline ::BidRequest_Gender gender() const;
  inline void set_gender(::BidRequest_Gender value);

  // optional string detected_language = 9;
  inline bool has_detected_language() const;
  inline void clear_detected_language();
  static const int kDetectedLanguageFieldNumber = 9;
  inline const ::std::string& detected_language() const;
  inline void set_detected_language(const ::std::string& value);
  inline void set_detected_language(const char* value);
  inline void set_detected_language(const char* value, size_t size);
  inline ::std::string* mutable_detected_language();
  inline ::std::string* release_detected_language();
  inline void set_allocated_detected_language(::std::string* detected_language);

  // optional string flash_version = 10;
  inline bool has_flash_version() const;
  inline void clear_flash_version();
  static const int kFlashVersionFieldNumber = 10;
  inline const ::std::string& flash_version() const;
  inline void set_flash_version(const ::std::string& value);
  inline void set_flash_version(const char* value);
  inline void set_flash_version(const char* value, size_t size);
  inline ::std::string* mutable_flash_version();
  inline ::std::string* release_flash_version();
  inline void set_allocated_flash_version(::std::string* flash_version);

  // optional .BidRequest.Geo user_geo_info = 28;
  inline bool has_user_geo_info() const;
  inline void clear_user_geo_info();
  static const int kUserGeoInfoFieldNumber = 28;
  inline const ::BidRequest_Geo& user_geo_info() const;
  inline ::BidRequest_Geo* mutable_user_geo_info();
  inline ::BidRequest_Geo* release_user_geo_info();
  inline void set_allocated_user_geo_info(::BidRequest_Geo* user_geo_info);

  // optional string url = 11;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 11;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional string referer = 12;
  inline bool has_referer() const;
  inline void clear_referer();
  static const int kRefererFieldNumber = 12;
  inline const ::std::string& referer() const;
  inline void set_referer(const ::std::string& value);
  inline void set_referer(const char* value);
  inline void set_referer(const char* value, size_t size);
  inline ::std::string* mutable_referer();
  inline ::std::string* release_referer();
  inline void set_allocated_referer(::std::string* referer);

  // optional int32 site_category = 13;
  inline bool has_site_category() const;
  inline void clear_site_category();
  static const int kSiteCategoryFieldNumber = 13;
  inline ::google::protobuf::int32 site_category() const;
  inline void set_site_category(::google::protobuf::int32 value);

  // optional int32 site_quality = 14;
  inline bool has_site_quality() const;
  inline void clear_site_quality();
  static const int kSiteQualityFieldNumber = 14;
  inline ::google::protobuf::int32 site_quality() const;
  inline void set_site_quality(::google::protobuf::int32 value);

  // optional int32 page_type = 15;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 15;
  inline ::google::protobuf::int32 page_type() const;
  inline void set_page_type(::google::protobuf::int32 value);

  // repeated string page_keyword = 17;
  inline int page_keyword_size() const;
  inline void clear_page_keyword();
  static const int kPageKeywordFieldNumber = 17;
  inline const ::std::string& page_keyword(int index) const;
  inline ::std::string* mutable_page_keyword(int index);
  inline void set_page_keyword(int index, const ::std::string& value);
  inline void set_page_keyword(int index, const char* value);
  inline void set_page_keyword(int index, const char* value, size_t size);
  inline ::std::string* add_page_keyword();
  inline void add_page_keyword(const ::std::string& value);
  inline void add_page_keyword(const char* value);
  inline void add_page_keyword(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& page_keyword() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_page_keyword();

  // optional int32 page_quality = 18;
  inline bool has_page_quality() const;
  inline void clear_page_quality();
  static const int kPageQualityFieldNumber = 18;
  inline ::google::protobuf::int32 page_quality() const;
  inline void set_page_quality(::google::protobuf::int32 value);

  // optional int32 page_vertical = 21;
  inline bool has_page_vertical() const;
  inline void clear_page_vertical();
  static const int kPageVerticalFieldNumber = 21;
  inline ::google::protobuf::int32 page_vertical() const;
  inline void set_page_vertical(::google::protobuf::int32 value);

  // repeated int32 excluded_product_category = 19 [packed = true];
  inline int excluded_product_category_size() const;
  inline void clear_excluded_product_category();
  static const int kExcludedProductCategoryFieldNumber = 19;
  inline ::google::protobuf::int32 excluded_product_category(int index) const;
  inline void set_excluded_product_category(int index, ::google::protobuf::int32 value);
  inline void add_excluded_product_category(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_product_category() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_product_category();

  // optional .BidRequest.Mobile mobile = 29;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 29;
  inline const ::BidRequest_Mobile& mobile() const;
  inline ::BidRequest_Mobile* mutable_mobile();
  inline ::BidRequest_Mobile* release_mobile();
  inline void set_allocated_mobile(::BidRequest_Mobile* mobile);

  // optional .BidRequest.Video video = 30;
  inline bool has_video() const;
  inline void clear_video();
  static const int kVideoFieldNumber = 30;
  inline const ::BidRequest_Video& video() const;
  inline ::BidRequest_Video* mutable_video();
  inline ::BidRequest_Video* release_video();
  inline void set_allocated_video(::BidRequest_Video* video);

  // repeated .BidRequest.AdSlot adslot = 20;
  inline int adslot_size() const;
  inline void clear_adslot();
  static const int kAdslotFieldNumber = 20;
  inline const ::BidRequest_AdSlot& adslot(int index) const;
  inline ::BidRequest_AdSlot* mutable_adslot(int index);
  inline ::BidRequest_AdSlot* add_adslot();
  inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >&
      adslot() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >*
      mutable_adslot();

  // optional bool is_test = 26 [default = false];
  inline bool has_is_test() const;
  inline void clear_is_test();
  static const int kIsTestFieldNumber = 26;
  inline bool is_test() const;
  inline void set_is_test(bool value);

  // optional bool is_ping = 27 [default = false];
  inline bool has_is_ping() const;
  inline void clear_is_ping();
  static const int kIsPingFieldNumber = 27;
  inline bool is_ping() const;
  inline void set_is_ping(bool value);

  // @@protoc_insertion_point(class_scope:BidRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_user_agent();
  inline void clear_has_user_agent();
  inline void set_has_baidu_user_id();
  inline void clear_has_baidu_user_id();
  inline void set_has_baidu_user_id_version();
  inline void clear_has_baidu_user_id_version();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_detected_language();
  inline void clear_has_detected_language();
  inline void set_has_flash_version();
  inline void clear_has_flash_version();
  inline void set_has_user_geo_info();
  inline void clear_has_user_geo_info();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_referer();
  inline void clear_has_referer();
  inline void set_has_site_category();
  inline void clear_has_site_category();
  inline void set_has_site_quality();
  inline void clear_has_site_quality();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_page_quality();
  inline void clear_has_page_quality();
  inline void set_has_page_vertical();
  inline void clear_has_page_vertical();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_video();
  inline void clear_has_video();
  inline void set_has_is_test();
  inline void clear_has_is_test();
  inline void set_has_is_ping();
  inline void clear_has_is_ping();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::std::string* ip_;
  ::std::string* user_agent_;
  ::std::string* baidu_user_id_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_BaiduId > baidu_id_list_;
  ::google::protobuf::int32 baidu_user_id_version_;
  int gender_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_category_;
  ::std::string* detected_language_;
  ::std::string* flash_version_;
  ::BidRequest_Geo* user_geo_info_;
  ::std::string* url_;
  ::std::string* referer_;
  ::google::protobuf::int32 site_category_;
  ::google::protobuf::int32 site_quality_;
  ::google::protobuf::RepeatedPtrField< ::std::string> page_keyword_;
  ::google::protobuf::int32 page_type_;
  ::google::protobuf::int32 page_quality_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_product_category_;
  mutable int _excluded_product_category_cached_byte_size_;
  ::BidRequest_Mobile* mobile_;
  ::BidRequest_Video* video_;
  ::google::protobuf::int32 page_vertical_;
  bool is_test_;
  bool is_ping_;
  ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot > adslot_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ad_LinkUnitKeyword : public ::google::protobuf::Message {
 public:
  BidResponse_Ad_LinkUnitKeyword();
  virtual ~BidResponse_Ad_LinkUnitKeyword();

  BidResponse_Ad_LinkUnitKeyword(const BidResponse_Ad_LinkUnitKeyword& from);

  inline BidResponse_Ad_LinkUnitKeyword& operator=(const BidResponse_Ad_LinkUnitKeyword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_LinkUnitKeyword& default_instance();

  void Swap(BidResponse_Ad_LinkUnitKeyword* other);

  // implements Message ----------------------------------------------

  BidResponse_Ad_LinkUnitKeyword* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_LinkUnitKeyword& from);
  void MergeFrom(const BidResponse_Ad_LinkUnitKeyword& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string keyword = 1;
  inline bool has_keyword() const;
  inline void clear_keyword();
  static const int kKeywordFieldNumber = 1;
  inline const ::std::string& keyword() const;
  inline void set_keyword(const ::std::string& value);
  inline void set_keyword(const char* value);
  inline void set_keyword(const char* value, size_t size);
  inline ::std::string* mutable_keyword();
  inline ::std::string* release_keyword();
  inline void set_allocated_keyword(::std::string* keyword);

  // repeated int32 selected_style_type = 2;
  inline int selected_style_type_size() const;
  inline void clear_selected_style_type();
  static const int kSelectedStyleTypeFieldNumber = 2;
  inline ::google::protobuf::int32 selected_style_type(int index) const;
  inline void set_selected_style_type(int index, ::google::protobuf::int32 value);
  inline void add_selected_style_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      selected_style_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_selected_style_type();

  // @@protoc_insertion_point(class_scope:BidResponse.Ad.LinkUnitKeyword)
 private:
  inline void set_has_keyword();
  inline void clear_has_keyword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* keyword_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > selected_style_type_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ad_LinkUnitKeyword* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ad_ExpandCreativeInfo : public ::google::protobuf::Message {
 public:
  BidResponse_Ad_ExpandCreativeInfo();
  virtual ~BidResponse_Ad_ExpandCreativeInfo();

  BidResponse_Ad_ExpandCreativeInfo(const BidResponse_Ad_ExpandCreativeInfo& from);

  inline BidResponse_Ad_ExpandCreativeInfo& operator=(const BidResponse_Ad_ExpandCreativeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_ExpandCreativeInfo& default_instance();

  void Swap(BidResponse_Ad_ExpandCreativeInfo* other);

  // implements Message ----------------------------------------------

  BidResponse_Ad_ExpandCreativeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_ExpandCreativeInfo& from);
  void MergeFrom(const BidResponse_Ad_ExpandCreativeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 creative_width = 1;
  inline bool has_creative_width() const;
  inline void clear_creative_width();
  static const int kCreativeWidthFieldNumber = 1;
  inline ::google::protobuf::int32 creative_width() const;
  inline void set_creative_width(::google::protobuf::int32 value);

  // optional int32 creative_height = 2;
  inline bool has_creative_height() const;
  inline void clear_creative_height();
  static const int kCreativeHeightFieldNumber = 2;
  inline ::google::protobuf::int32 creative_height() const;
  inline void set_creative_height(::google::protobuf::int32 value);

  // optional string creative_landing_page = 3;
  inline bool has_creative_landing_page() const;
  inline void clear_creative_landing_page();
  static const int kCreativeLandingPageFieldNumber = 3;
  inline const ::std::string& creative_landing_page() const;
  inline void set_creative_landing_page(const ::std::string& value);
  inline void set_creative_landing_page(const char* value);
  inline void set_creative_landing_page(const char* value, size_t size);
  inline ::std::string* mutable_creative_landing_page();
  inline ::std::string* release_creative_landing_page();
  inline void set_allocated_creative_landing_page(::std::string* creative_landing_page);

  // optional int32 creative_type = 4;
  inline bool has_creative_type() const;
  inline void clear_creative_type();
  static const int kCreativeTypeFieldNumber = 4;
  inline ::google::protobuf::int32 creative_type() const;
  inline void set_creative_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidResponse.Ad.ExpandCreativeInfo)
 private:
  inline void set_has_creative_width();
  inline void clear_has_creative_width();
  inline void set_has_creative_height();
  inline void clear_has_creative_height();
  inline void set_has_creative_landing_page();
  inline void clear_has_creative_landing_page();
  inline void set_has_creative_type();
  inline void clear_has_creative_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 creative_width_;
  ::google::protobuf::int32 creative_height_;
  ::std::string* creative_landing_page_;
  ::google::protobuf::int32 creative_type_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ad_ExpandCreativeInfo* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ad : public ::google::protobuf::Message {
 public:
  BidResponse_Ad();
  virtual ~BidResponse_Ad();

  BidResponse_Ad(const BidResponse_Ad& from);

  inline BidResponse_Ad& operator=(const BidResponse_Ad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad& default_instance();

  void Swap(BidResponse_Ad* other);

  // implements Message ----------------------------------------------

  BidResponse_Ad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad& from);
  void MergeFrom(const BidResponse_Ad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad_LinkUnitKeyword LinkUnitKeyword;
  typedef BidResponse_Ad_ExpandCreativeInfo ExpandCreativeInfo;

  // accessors -------------------------------------------------------

  // optional int32 sequence_id = 1;
  inline bool has_sequence_id() const;
  inline void clear_sequence_id();
  static const int kSequenceIdFieldNumber = 1;
  inline ::google::protobuf::int32 sequence_id() const;
  inline void set_sequence_id(::google::protobuf::int32 value);

  // optional int64 creative_id = 2;
  inline bool has_creative_id() const;
  inline void clear_creative_id();
  static const int kCreativeIdFieldNumber = 2;
  inline ::google::protobuf::int64 creative_id() const;
  inline void set_creative_id(::google::protobuf::int64 value);

  // optional string html_snippet = 7;
  inline bool has_html_snippet() const;
  inline void clear_html_snippet();
  static const int kHtmlSnippetFieldNumber = 7;
  inline const ::std::string& html_snippet() const;
  inline void set_html_snippet(const ::std::string& value);
  inline void set_html_snippet(const char* value);
  inline void set_html_snippet(const char* value, size_t size);
  inline ::std::string* mutable_html_snippet();
  inline ::std::string* release_html_snippet();
  inline void set_allocated_html_snippet(::std::string* html_snippet);

  // optional .BidResponse.Ad.LinkUnitKeyword link_unit_keyword = 18;
  inline bool has_link_unit_keyword() const;
  inline void clear_link_unit_keyword();
  static const int kLinkUnitKeywordFieldNumber = 18;
  inline const ::BidResponse_Ad_LinkUnitKeyword& link_unit_keyword() const;
  inline ::BidResponse_Ad_LinkUnitKeyword* mutable_link_unit_keyword();
  inline ::BidResponse_Ad_LinkUnitKeyword* release_link_unit_keyword();
  inline void set_allocated_link_unit_keyword(::BidResponse_Ad_LinkUnitKeyword* link_unit_keyword);

  // optional uint64 advertiser_id = 8;
  inline bool has_advertiser_id() const;
  inline void clear_advertiser_id();
  static const int kAdvertiserIdFieldNumber = 8;
  inline ::google::protobuf::uint64 advertiser_id() const;
  inline void set_advertiser_id(::google::protobuf::uint64 value);

  // optional int32 width = 9;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 9;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 10;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 10;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional int32 category = 11;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 11;
  inline ::google::protobuf::int32 category() const;
  inline void set_category(::google::protobuf::int32 value);

  // optional int32 type = 12;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 12;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string landing_page = 13;
  inline bool has_landing_page() const;
  inline void clear_landing_page();
  static const int kLandingPageFieldNumber = 13;
  inline const ::std::string& landing_page() const;
  inline void set_landing_page(const ::std::string& value);
  inline void set_landing_page(const char* value);
  inline void set_landing_page(const char* value, size_t size);
  inline ::std::string* mutable_landing_page();
  inline ::std::string* release_landing_page();
  inline void set_allocated_landing_page(::std::string* landing_page);

  // repeated string target_url = 14;
  inline int target_url_size() const;
  inline void clear_target_url();
  static const int kTargetUrlFieldNumber = 14;
  inline const ::std::string& target_url(int index) const;
  inline ::std::string* mutable_target_url(int index);
  inline void set_target_url(int index, const ::std::string& value);
  inline void set_target_url(int index, const char* value);
  inline void set_target_url(int index, const char* value, size_t size);
  inline ::std::string* add_target_url();
  inline void add_target_url(const ::std::string& value);
  inline void add_target_url(const char* value);
  inline void add_target_url(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& target_url() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_target_url();

  // repeated string monitor_urls = 17;
  inline int monitor_urls_size() const;
  inline void clear_monitor_urls();
  static const int kMonitorUrlsFieldNumber = 17;
  inline const ::std::string& monitor_urls(int index) const;
  inline ::std::string* mutable_monitor_urls(int index);
  inline void set_monitor_urls(int index, const ::std::string& value);
  inline void set_monitor_urls(int index, const char* value);
  inline void set_monitor_urls(int index, const char* value, size_t size);
  inline ::std::string* add_monitor_urls();
  inline void add_monitor_urls(const ::std::string& value);
  inline void add_monitor_urls(const char* value);
  inline void add_monitor_urls(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& monitor_urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_monitor_urls();

  // optional .BidResponse.Ad.ExpandCreativeInfo expand_creative_info = 19;
  inline bool has_expand_creative_info() const;
  inline void clear_expand_creative_info();
  static const int kExpandCreativeInfoFieldNumber = 19;
  inline const ::BidResponse_Ad_ExpandCreativeInfo& expand_creative_info() const;
  inline ::BidResponse_Ad_ExpandCreativeInfo* mutable_expand_creative_info();
  inline ::BidResponse_Ad_ExpandCreativeInfo* release_expand_creative_info();
  inline void set_allocated_expand_creative_info(::BidResponse_Ad_ExpandCreativeInfo* expand_creative_info);

  // optional int32 max_cpm = 3;
  inline bool has_max_cpm() const;
  inline void clear_max_cpm();
  static const int kMaxCpmFieldNumber = 3;
  inline ::google::protobuf::int32 max_cpm() const;
  inline void set_max_cpm(::google::protobuf::int32 value);

  // optional string extdata = 5;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 5;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // optional bool is_cookie_matching = 6;
  inline bool has_is_cookie_matching() const;
  inline void clear_is_cookie_matching();
  static const int kIsCookieMatchingFieldNumber = 6;
  inline bool is_cookie_matching() const;
  inline void set_is_cookie_matching(bool value);

  // optional string preferred_order_id = 15;
  inline bool has_preferred_order_id() const;
  inline void clear_preferred_order_id();
  static const int kPreferredOrderIdFieldNumber = 15;
  inline const ::std::string& preferred_order_id() const;
  inline void set_preferred_order_id(const ::std::string& value);
  inline void set_preferred_order_id(const char* value);
  inline void set_preferred_order_id(const char* value, size_t size);
  inline ::std::string* mutable_preferred_order_id();
  inline ::std::string* release_preferred_order_id();
  inline void set_allocated_preferred_order_id(::std::string* preferred_order_id);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(BidResponse_Ad)
  // @@protoc_insertion_point(class_scope:BidResponse.Ad)
 private:
  inline void set_has_sequence_id();
  inline void clear_has_sequence_id();
  inline void set_has_creative_id();
  inline void clear_has_creative_id();
  inline void set_has_html_snippet();
  inline void clear_has_html_snippet();
  inline void set_has_link_unit_keyword();
  inline void clear_has_link_unit_keyword();
  inline void set_has_advertiser_id();
  inline void clear_has_advertiser_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_landing_page();
  inline void clear_has_landing_page();
  inline void set_has_expand_creative_info();
  inline void clear_has_expand_creative_info();
  inline void set_has_max_cpm();
  inline void clear_has_max_cpm();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_is_cookie_matching();
  inline void clear_has_is_cookie_matching();
  inline void set_has_preferred_order_id();
  inline void clear_has_preferred_order_id();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 creative_id_;
  ::std::string* html_snippet_;
  ::google::protobuf::int32 sequence_id_;
  ::google::protobuf::int32 width_;
  ::BidResponse_Ad_LinkUnitKeyword* link_unit_keyword_;
  ::google::protobuf::uint64 advertiser_id_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 category_;
  ::std::string* landing_page_;
  ::google::protobuf::RepeatedPtrField< ::std::string> target_url_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 max_cpm_;
  ::google::protobuf::RepeatedPtrField< ::std::string> monitor_urls_;
  ::BidResponse_Ad_ExpandCreativeInfo* expand_creative_info_;
  ::std::string* extdata_;
  ::std::string* preferred_order_id_;
  bool is_cookie_matching_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ad* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse : public ::google::protobuf::Message {
 public:
  BidResponse();
  virtual ~BidResponse();

  BidResponse(const BidResponse& from);

  inline BidResponse& operator=(const BidResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse& default_instance();

  void Swap(BidResponse* other);

  // implements Message ----------------------------------------------

  BidResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse& from);
  void MergeFrom(const BidResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad Ad;

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // repeated .BidResponse.Ad ad = 2;
  inline int ad_size() const;
  inline void clear_ad();
  static const int kAdFieldNumber = 2;
  inline const ::BidResponse_Ad& ad(int index) const;
  inline ::BidResponse_Ad* mutable_ad(int index);
  inline ::BidResponse_Ad* add_ad();
  inline const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >&
      ad() const;
  inline ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >*
      mutable_ad();

  // optional string debug_string = 3;
  inline bool has_debug_string() const;
  inline void clear_debug_string();
  static const int kDebugStringFieldNumber = 3;
  inline const ::std::string& debug_string() const;
  inline void set_debug_string(const ::std::string& value);
  inline void set_debug_string(const char* value);
  inline void set_debug_string(const char* value, size_t size);
  inline ::std::string* mutable_debug_string();
  inline ::std::string* release_debug_string();
  inline void set_allocated_debug_string(::std::string* debug_string);

  // optional int32 processing_time_ms = 4;
  inline bool has_processing_time_ms() const;
  inline void clear_processing_time_ms();
  static const int kProcessingTimeMsFieldNumber = 4;
  inline ::google::protobuf::int32 processing_time_ms() const;
  inline void set_processing_time_ms(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BidResponse)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_debug_string();
  inline void clear_has_debug_string();
  inline void set_has_processing_time_ms();
  inline void clear_has_processing_time_ms();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad > ad_;
  ::std::string* debug_string_;
  ::google::protobuf::int32 processing_time_ms_;
  friend void  protobuf_AddDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_AssignDesc_baidu_5frealtime_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5frealtime_5fbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse* default_instance_;
};
// ===================================================================

static const int kAdStatusFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier< ::BidResponse_Ad,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  ad_status;

// ===================================================================

// BidRequest_BaiduId

// optional string baidu_user_id = 1;
inline bool BidRequest_BaiduId::has_baidu_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_BaiduId::set_has_baidu_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_BaiduId::clear_has_baidu_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_BaiduId::clear_baidu_user_id() {
  if (baidu_user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_->clear();
  }
  clear_has_baidu_user_id();
}
inline const ::std::string& BidRequest_BaiduId::baidu_user_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.BaiduId.baidu_user_id)
  return *baidu_user_id_;
}
inline void BidRequest_BaiduId::set_baidu_user_id(const ::std::string& value) {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  baidu_user_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.BaiduId.baidu_user_id)
}
inline void BidRequest_BaiduId::set_baidu_user_id(const char* value) {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  baidu_user_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.BaiduId.baidu_user_id)
}
inline void BidRequest_BaiduId::set_baidu_user_id(const char* value, size_t size) {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  baidu_user_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.BaiduId.baidu_user_id)
}
inline ::std::string* BidRequest_BaiduId::mutable_baidu_user_id() {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.BaiduId.baidu_user_id)
  return baidu_user_id_;
}
inline ::std::string* BidRequest_BaiduId::release_baidu_user_id() {
  clear_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = baidu_user_id_;
    baidu_user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_BaiduId::set_allocated_baidu_user_id(::std::string* baidu_user_id) {
  if (baidu_user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete baidu_user_id_;
  }
  if (baidu_user_id) {
    set_has_baidu_user_id();
    baidu_user_id_ = baidu_user_id;
  } else {
    clear_has_baidu_user_id();
    baidu_user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.BaiduId.baidu_user_id)
}

// optional int32 baidu_user_id_version = 2;
inline bool BidRequest_BaiduId::has_baidu_user_id_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_BaiduId::set_has_baidu_user_id_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_BaiduId::clear_has_baidu_user_id_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_BaiduId::clear_baidu_user_id_version() {
  baidu_user_id_version_ = 0;
  clear_has_baidu_user_id_version();
}
inline ::google::protobuf::int32 BidRequest_BaiduId::baidu_user_id_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.BaiduId.baidu_user_id_version)
  return baidu_user_id_version_;
}
inline void BidRequest_BaiduId::set_baidu_user_id_version(::google::protobuf::int32 value) {
  set_has_baidu_user_id_version();
  baidu_user_id_version_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.BaiduId.baidu_user_id_version)
}

// -------------------------------------------------------------------

// BidRequest_Geo_Coordinate

// optional .BidRequest.Geo.Coordinate.Standard standard = 1;
inline bool BidRequest_Geo_Coordinate::has_standard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Geo_Coordinate::set_has_standard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Geo_Coordinate::clear_has_standard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Geo_Coordinate::clear_standard() {
  standard_ = 0;
  clear_has_standard();
}
inline ::BidRequest_Geo_Coordinate_Standard BidRequest_Geo_Coordinate::standard() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.Coordinate.standard)
  return static_cast< ::BidRequest_Geo_Coordinate_Standard >(standard_);
}
inline void BidRequest_Geo_Coordinate::set_standard(::BidRequest_Geo_Coordinate_Standard value) {
  assert(::BidRequest_Geo_Coordinate_Standard_IsValid(value));
  set_has_standard();
  standard_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Geo.Coordinate.standard)
}

// optional float latitude = 2;
inline bool BidRequest_Geo_Coordinate::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Geo_Coordinate::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Geo_Coordinate::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Geo_Coordinate::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float BidRequest_Geo_Coordinate::latitude() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.Coordinate.latitude)
  return latitude_;
}
inline void BidRequest_Geo_Coordinate::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Geo.Coordinate.latitude)
}

// optional float longitude = 3;
inline bool BidRequest_Geo_Coordinate::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Geo_Coordinate::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Geo_Coordinate::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Geo_Coordinate::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float BidRequest_Geo_Coordinate::longitude() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.Coordinate.longitude)
  return longitude_;
}
inline void BidRequest_Geo_Coordinate::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Geo.Coordinate.longitude)
}

// -------------------------------------------------------------------

// BidRequest_Geo_UserLocation

// optional string province = 1;
inline bool BidRequest_Geo_UserLocation::has_province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_province() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Geo_UserLocation::clear_has_province() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Geo_UserLocation::clear_province() {
  if (province_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    province_->clear();
  }
  clear_has_province();
}
inline const ::std::string& BidRequest_Geo_UserLocation::province() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.UserLocation.province)
  return *province_;
}
inline void BidRequest_Geo_UserLocation::set_province(const ::std::string& value) {
  set_has_province();
  if (province_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    province_ = new ::std::string;
  }
  province_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Geo.UserLocation.province)
}
inline void BidRequest_Geo_UserLocation::set_province(const char* value) {
  set_has_province();
  if (province_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    province_ = new ::std::string;
  }
  province_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Geo.UserLocation.province)
}
inline void BidRequest_Geo_UserLocation::set_province(const char* value, size_t size) {
  set_has_province();
  if (province_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    province_ = new ::std::string;
  }
  province_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Geo.UserLocation.province)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_province() {
  set_has_province();
  if (province_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    province_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Geo.UserLocation.province)
  return province_;
}
inline ::std::string* BidRequest_Geo_UserLocation::release_province() {
  clear_has_province();
  if (province_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = province_;
    province_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Geo_UserLocation::set_allocated_province(::std::string* province) {
  if (province_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete province_;
  }
  if (province) {
    set_has_province();
    province_ = province;
  } else {
    clear_has_province();
    province_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Geo.UserLocation.province)
}

// optional string city = 2;
inline bool BidRequest_Geo_UserLocation::has_city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Geo_UserLocation::clear_has_city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Geo_UserLocation::clear_city() {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& BidRequest_Geo_UserLocation::city() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.UserLocation.city)
  return *city_;
}
inline void BidRequest_Geo_UserLocation::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Geo.UserLocation.city)
}
inline void BidRequest_Geo_UserLocation::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Geo.UserLocation.city)
}
inline void BidRequest_Geo_UserLocation::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Geo.UserLocation.city)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Geo.UserLocation.city)
  return city_;
}
inline ::std::string* BidRequest_Geo_UserLocation::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Geo_UserLocation::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Geo.UserLocation.city)
}

// optional string district = 3;
inline bool BidRequest_Geo_UserLocation::has_district() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_district() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Geo_UserLocation::clear_has_district() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Geo_UserLocation::clear_district() {
  if (district_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    district_->clear();
  }
  clear_has_district();
}
inline const ::std::string& BidRequest_Geo_UserLocation::district() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.UserLocation.district)
  return *district_;
}
inline void BidRequest_Geo_UserLocation::set_district(const ::std::string& value) {
  set_has_district();
  if (district_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    district_ = new ::std::string;
  }
  district_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Geo.UserLocation.district)
}
inline void BidRequest_Geo_UserLocation::set_district(const char* value) {
  set_has_district();
  if (district_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    district_ = new ::std::string;
  }
  district_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Geo.UserLocation.district)
}
inline void BidRequest_Geo_UserLocation::set_district(const char* value, size_t size) {
  set_has_district();
  if (district_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    district_ = new ::std::string;
  }
  district_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Geo.UserLocation.district)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_district() {
  set_has_district();
  if (district_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    district_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Geo.UserLocation.district)
  return district_;
}
inline ::std::string* BidRequest_Geo_UserLocation::release_district() {
  clear_has_district();
  if (district_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = district_;
    district_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Geo_UserLocation::set_allocated_district(::std::string* district) {
  if (district_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete district_;
  }
  if (district) {
    set_has_district();
    district_ = district;
  } else {
    clear_has_district();
    district_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Geo.UserLocation.district)
}

// optional string street = 4;
inline bool BidRequest_Geo_UserLocation::has_street() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_street() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Geo_UserLocation::clear_has_street() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Geo_UserLocation::clear_street() {
  if (street_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    street_->clear();
  }
  clear_has_street();
}
inline const ::std::string& BidRequest_Geo_UserLocation::street() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.UserLocation.street)
  return *street_;
}
inline void BidRequest_Geo_UserLocation::set_street(const ::std::string& value) {
  set_has_street();
  if (street_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    street_ = new ::std::string;
  }
  street_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Geo.UserLocation.street)
}
inline void BidRequest_Geo_UserLocation::set_street(const char* value) {
  set_has_street();
  if (street_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    street_ = new ::std::string;
  }
  street_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Geo.UserLocation.street)
}
inline void BidRequest_Geo_UserLocation::set_street(const char* value, size_t size) {
  set_has_street();
  if (street_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    street_ = new ::std::string;
  }
  street_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Geo.UserLocation.street)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_street() {
  set_has_street();
  if (street_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    street_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Geo.UserLocation.street)
  return street_;
}
inline ::std::string* BidRequest_Geo_UserLocation::release_street() {
  clear_has_street();
  if (street_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = street_;
    street_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Geo_UserLocation::set_allocated_street(::std::string* street) {
  if (street_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete street_;
  }
  if (street) {
    set_has_street();
    street_ = street;
  } else {
    clear_has_street();
    street_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Geo.UserLocation.street)
}

// -------------------------------------------------------------------

// BidRequest_Geo

// repeated .BidRequest.Geo.Coordinate user_coordinate = 1;
inline int BidRequest_Geo::user_coordinate_size() const {
  return user_coordinate_.size();
}
inline void BidRequest_Geo::clear_user_coordinate() {
  user_coordinate_.Clear();
}
inline const ::BidRequest_Geo_Coordinate& BidRequest_Geo::user_coordinate(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.user_coordinate)
  return user_coordinate_.Get(index);
}
inline ::BidRequest_Geo_Coordinate* BidRequest_Geo::mutable_user_coordinate(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.Geo.user_coordinate)
  return user_coordinate_.Mutable(index);
}
inline ::BidRequest_Geo_Coordinate* BidRequest_Geo::add_user_coordinate() {
  // @@protoc_insertion_point(field_add:BidRequest.Geo.user_coordinate)
  return user_coordinate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Geo_Coordinate >&
BidRequest_Geo::user_coordinate() const {
  // @@protoc_insertion_point(field_list:BidRequest.Geo.user_coordinate)
  return user_coordinate_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Geo_Coordinate >*
BidRequest_Geo::mutable_user_coordinate() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Geo.user_coordinate)
  return &user_coordinate_;
}

// optional .BidRequest.Geo.UserLocation user_location = 2;
inline bool BidRequest_Geo::has_user_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Geo::set_has_user_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Geo::clear_has_user_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Geo::clear_user_location() {
  if (user_location_ != NULL) user_location_->::BidRequest_Geo_UserLocation::Clear();
  clear_has_user_location();
}
inline const ::BidRequest_Geo_UserLocation& BidRequest_Geo::user_location() const {
  // @@protoc_insertion_point(field_get:BidRequest.Geo.user_location)
  return user_location_ != NULL ? *user_location_ : *default_instance_->user_location_;
}
inline ::BidRequest_Geo_UserLocation* BidRequest_Geo::mutable_user_location() {
  set_has_user_location();
  if (user_location_ == NULL) user_location_ = new ::BidRequest_Geo_UserLocation;
  // @@protoc_insertion_point(field_mutable:BidRequest.Geo.user_location)
  return user_location_;
}
inline ::BidRequest_Geo_UserLocation* BidRequest_Geo::release_user_location() {
  clear_has_user_location();
  ::BidRequest_Geo_UserLocation* temp = user_location_;
  user_location_ = NULL;
  return temp;
}
inline void BidRequest_Geo::set_allocated_user_location(::BidRequest_Geo_UserLocation* user_location) {
  delete user_location_;
  user_location_ = user_location;
  if (user_location) {
    set_has_user_location();
  } else {
    clear_has_user_location();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Geo.user_location)
}

// -------------------------------------------------------------------

// BidRequest_Mobile_MobileID

// optional .BidRequest.Mobile.MobileID.IDType type = 1;
inline bool BidRequest_Mobile_MobileID::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_MobileID::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_MobileID::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_MobileID::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::BidRequest_Mobile_MobileID_IDType BidRequest_Mobile_MobileID::type() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileID.type)
  return static_cast< ::BidRequest_Mobile_MobileID_IDType >(type_);
}
inline void BidRequest_Mobile_MobileID::set_type(::BidRequest_Mobile_MobileID_IDType value) {
  assert(::BidRequest_Mobile_MobileID_IDType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileID.type)
}

// optional string id = 2;
inline bool BidRequest_Mobile_MobileID::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_MobileID::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_MobileID::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_MobileID::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& BidRequest_Mobile_MobileID::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileID.id)
  return *id_;
}
inline void BidRequest_Mobile_MobileID::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileID.id)
}
inline void BidRequest_Mobile_MobileID::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.MobileID.id)
}
inline void BidRequest_Mobile_MobileID::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.MobileID.id)
}
inline ::std::string* BidRequest_Mobile_MobileID::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.MobileID.id)
  return id_;
}
inline ::std::string* BidRequest_Mobile_MobileID::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile_MobileID::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.MobileID.id)
}

// -------------------------------------------------------------------

// BidRequest_Mobile_DeviceOsVersion

// optional int32 os_version_major = 1;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_major() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_major() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_major() {
  os_version_major_ = 0;
  clear_has_os_version_major();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_major() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DeviceOsVersion.os_version_major)
  return os_version_major_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_major(::google::protobuf::int32 value) {
  set_has_os_version_major();
  os_version_major_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DeviceOsVersion.os_version_major)
}

// optional int32 os_version_minor = 2;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_minor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_minor() {
  os_version_minor_ = 0;
  clear_has_os_version_minor();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_minor() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DeviceOsVersion.os_version_minor)
  return os_version_minor_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_minor(::google::protobuf::int32 value) {
  set_has_os_version_minor();
  os_version_minor_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DeviceOsVersion.os_version_minor)
}

// optional int32 os_version_micro = 3;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_micro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_micro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_micro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_micro() {
  os_version_micro_ = 0;
  clear_has_os_version_micro();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_micro() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DeviceOsVersion.os_version_micro)
  return os_version_micro_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_micro(::google::protobuf::int32 value) {
  set_has_os_version_micro();
  os_version_micro_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DeviceOsVersion.os_version_micro)
}

// -------------------------------------------------------------------

// BidRequest_Mobile_ForAdvertisingID

// optional .BidRequest.Mobile.ForAdvertisingID.IDType type = 1;
inline bool BidRequest_Mobile_ForAdvertisingID::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_ForAdvertisingID::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::BidRequest_Mobile_ForAdvertisingID_IDType BidRequest_Mobile_ForAdvertisingID::type() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.ForAdvertisingID.type)
  return static_cast< ::BidRequest_Mobile_ForAdvertisingID_IDType >(type_);
}
inline void BidRequest_Mobile_ForAdvertisingID::set_type(::BidRequest_Mobile_ForAdvertisingID_IDType value) {
  assert(::BidRequest_Mobile_ForAdvertisingID_IDType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.ForAdvertisingID.type)
}

// optional string id = 2;
inline bool BidRequest_Mobile_ForAdvertisingID::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_ForAdvertisingID::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& BidRequest_Mobile_ForAdvertisingID::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.ForAdvertisingID.id)
  return *id_;
}
inline void BidRequest_Mobile_ForAdvertisingID::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.ForAdvertisingID.id)
}
inline void BidRequest_Mobile_ForAdvertisingID::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.ForAdvertisingID.id)
}
inline void BidRequest_Mobile_ForAdvertisingID::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.ForAdvertisingID.id)
}
inline ::std::string* BidRequest_Mobile_ForAdvertisingID::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.ForAdvertisingID.id)
  return id_;
}
inline ::std::string* BidRequest_Mobile_ForAdvertisingID::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile_ForAdvertisingID::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.ForAdvertisingID.id)
}

// -------------------------------------------------------------------

// BidRequest_Mobile_MobileApp

// optional string app_id = 1;
inline bool BidRequest_Mobile_MobileApp::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_id() {
  if (app_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_id_->clear();
  }
  clear_has_app_id();
}
inline const ::std::string& BidRequest_Mobile_MobileApp::app_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileApp.app_id)
  return *app_id_;
}
inline void BidRequest_Mobile_MobileApp::set_app_id(const ::std::string& value) {
  set_has_app_id();
  if (app_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_id_ = new ::std::string;
  }
  app_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileApp.app_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_id(const char* value) {
  set_has_app_id();
  if (app_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_id_ = new ::std::string;
  }
  app_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.MobileApp.app_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  if (app_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_id_ = new ::std::string;
  }
  app_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.MobileApp.app_id)
}
inline ::std::string* BidRequest_Mobile_MobileApp::mutable_app_id() {
  set_has_app_id();
  if (app_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.MobileApp.app_id)
  return app_id_;
}
inline ::std::string* BidRequest_Mobile_MobileApp::release_app_id() {
  clear_has_app_id();
  if (app_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = app_id_;
    app_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile_MobileApp::set_allocated_app_id(::std::string* app_id) {
  if (app_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_id_;
  }
  if (app_id) {
    set_has_app_id();
    app_id_ = app_id;
  } else {
    clear_has_app_id();
    app_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.MobileApp.app_id)
}

// optional string app_bundle_id = 2;
inline bool BidRequest_Mobile_MobileApp::has_app_bundle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_bundle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_bundle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_bundle_id() {
  if (app_bundle_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_bundle_id_->clear();
  }
  clear_has_app_bundle_id();
}
inline const ::std::string& BidRequest_Mobile_MobileApp::app_bundle_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileApp.app_bundle_id)
  return *app_bundle_id_;
}
inline void BidRequest_Mobile_MobileApp::set_app_bundle_id(const ::std::string& value) {
  set_has_app_bundle_id();
  if (app_bundle_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_bundle_id_ = new ::std::string;
  }
  app_bundle_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileApp.app_bundle_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_bundle_id(const char* value) {
  set_has_app_bundle_id();
  if (app_bundle_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_bundle_id_ = new ::std::string;
  }
  app_bundle_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.MobileApp.app_bundle_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_bundle_id(const char* value, size_t size) {
  set_has_app_bundle_id();
  if (app_bundle_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_bundle_id_ = new ::std::string;
  }
  app_bundle_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.MobileApp.app_bundle_id)
}
inline ::std::string* BidRequest_Mobile_MobileApp::mutable_app_bundle_id() {
  set_has_app_bundle_id();
  if (app_bundle_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    app_bundle_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.MobileApp.app_bundle_id)
  return app_bundle_id_;
}
inline ::std::string* BidRequest_Mobile_MobileApp::release_app_bundle_id() {
  clear_has_app_bundle_id();
  if (app_bundle_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = app_bundle_id_;
    app_bundle_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile_MobileApp::set_allocated_app_bundle_id(::std::string* app_bundle_id) {
  if (app_bundle_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_bundle_id_;
  }
  if (app_bundle_id) {
    set_has_app_bundle_id();
    app_bundle_id_ = app_bundle_id;
  } else {
    clear_has_app_bundle_id();
    app_bundle_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.MobileApp.app_bundle_id)
}

// optional int32 app_category = 3;
inline bool BidRequest_Mobile_MobileApp::has_app_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_category() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_category() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_category() {
  app_category_ = 0;
  clear_has_app_category();
}
inline ::google::protobuf::int32 BidRequest_Mobile_MobileApp::app_category() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileApp.app_category)
  return app_category_;
}
inline void BidRequest_Mobile_MobileApp::set_app_category(::google::protobuf::int32 value) {
  set_has_app_category();
  app_category_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileApp.app_category)
}

// optional int32 app_publisher_id = 4;
inline bool BidRequest_Mobile_MobileApp::has_app_publisher_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_publisher_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_publisher_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_publisher_id() {
  app_publisher_id_ = 0;
  clear_has_app_publisher_id();
}
inline ::google::protobuf::int32 BidRequest_Mobile_MobileApp::app_publisher_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileApp.app_publisher_id)
  return app_publisher_id_;
}
inline void BidRequest_Mobile_MobileApp::set_app_publisher_id(::google::protobuf::int32 value) {
  set_has_app_publisher_id();
  app_publisher_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileApp.app_publisher_id)
}

// repeated .BidRequest.Mobile.MobileApp.AppInteractionType app_interaction_type = 5;
inline int BidRequest_Mobile_MobileApp::app_interaction_type_size() const {
  return app_interaction_type_.size();
}
inline void BidRequest_Mobile_MobileApp::clear_app_interaction_type() {
  app_interaction_type_.Clear();
}
inline ::BidRequest_Mobile_MobileApp_AppInteractionType BidRequest_Mobile_MobileApp::app_interaction_type(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.MobileApp.app_interaction_type)
  return static_cast< ::BidRequest_Mobile_MobileApp_AppInteractionType >(app_interaction_type_.Get(index));
}
inline void BidRequest_Mobile_MobileApp::set_app_interaction_type(int index, ::BidRequest_Mobile_MobileApp_AppInteractionType value) {
  assert(::BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(value));
  app_interaction_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.MobileApp.app_interaction_type)
}
inline void BidRequest_Mobile_MobileApp::add_app_interaction_type(::BidRequest_Mobile_MobileApp_AppInteractionType value) {
  assert(::BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(value));
  app_interaction_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Mobile.MobileApp.app_interaction_type)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_Mobile_MobileApp::app_interaction_type() const {
  // @@protoc_insertion_point(field_list:BidRequest.Mobile.MobileApp.app_interaction_type)
  return app_interaction_type_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_Mobile_MobileApp::mutable_app_interaction_type() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Mobile.MobileApp.app_interaction_type)
  return &app_interaction_type_;
}

// -------------------------------------------------------------------

// BidRequest_Mobile

// optional string DEPRECATED_device_id = 1;
inline bool BidRequest_Mobile::has_deprecated_device_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_device_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile::clear_has_deprecated_device_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile::clear_deprecated_device_id() {
  if (deprecated_device_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_device_id_->clear();
  }
  clear_has_deprecated_device_id();
}
inline const ::std::string& BidRequest_Mobile::deprecated_device_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DEPRECATED_device_id)
  return *deprecated_device_id_;
}
inline void BidRequest_Mobile::set_deprecated_device_id(const ::std::string& value) {
  set_has_deprecated_device_id();
  if (deprecated_device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_device_id_ = new ::std::string;
  }
  deprecated_device_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DEPRECATED_device_id)
}
inline void BidRequest_Mobile::set_deprecated_device_id(const char* value) {
  set_has_deprecated_device_id();
  if (deprecated_device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_device_id_ = new ::std::string;
  }
  deprecated_device_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.DEPRECATED_device_id)
}
inline void BidRequest_Mobile::set_deprecated_device_id(const char* value, size_t size) {
  set_has_deprecated_device_id();
  if (deprecated_device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_device_id_ = new ::std::string;
  }
  deprecated_device_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.DEPRECATED_device_id)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_device_id() {
  set_has_deprecated_device_id();
  if (deprecated_device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_device_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.DEPRECATED_device_id)
  return deprecated_device_id_;
}
inline ::std::string* BidRequest_Mobile::release_deprecated_device_id() {
  clear_has_deprecated_device_id();
  if (deprecated_device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deprecated_device_id_;
    deprecated_device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile::set_allocated_deprecated_device_id(::std::string* deprecated_device_id) {
  if (deprecated_device_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deprecated_device_id_;
  }
  if (deprecated_device_id) {
    set_has_deprecated_device_id();
    deprecated_device_id_ = deprecated_device_id;
  } else {
    clear_has_deprecated_device_id();
    deprecated_device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.DEPRECATED_device_id)
}

// repeated .BidRequest.Mobile.MobileID id = 13;
inline int BidRequest_Mobile::id_size() const {
  return id_.size();
}
inline void BidRequest_Mobile::clear_id() {
  id_.Clear();
}
inline const ::BidRequest_Mobile_MobileID& BidRequest_Mobile::id(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.id)
  return id_.Get(index);
}
inline ::BidRequest_Mobile_MobileID* BidRequest_Mobile::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.id)
  return id_.Mutable(index);
}
inline ::BidRequest_Mobile_MobileID* BidRequest_Mobile::add_id() {
  // @@protoc_insertion_point(field_add:BidRequest.Mobile.id)
  return id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_MobileID >&
BidRequest_Mobile::id() const {
  // @@protoc_insertion_point(field_list:BidRequest.Mobile.id)
  return id_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_MobileID >*
BidRequest_Mobile::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Mobile.id)
  return &id_;
}

// optional .BidRequest.Mobile.MobileDeviceType device_type = 2;
inline bool BidRequest_Mobile::has_device_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile::set_has_device_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile::clear_has_device_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile::clear_device_type() {
  device_type_ = 0;
  clear_has_device_type();
}
inline ::BidRequest_Mobile_MobileDeviceType BidRequest_Mobile::device_type() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.device_type)
  return static_cast< ::BidRequest_Mobile_MobileDeviceType >(device_type_);
}
inline void BidRequest_Mobile::set_device_type(::BidRequest_Mobile_MobileDeviceType value) {
  assert(::BidRequest_Mobile_MobileDeviceType_IsValid(value));
  set_has_device_type();
  device_type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.device_type)
}

// optional .BidRequest.Mobile.OS platform = 3 [default = UNKNOWN_OS];
inline bool BidRequest_Mobile::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::BidRequest_Mobile_OS BidRequest_Mobile::platform() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.platform)
  return static_cast< ::BidRequest_Mobile_OS >(platform_);
}
inline void BidRequest_Mobile::set_platform(::BidRequest_Mobile_OS value) {
  assert(::BidRequest_Mobile_OS_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.platform)
}

// optional .BidRequest.Mobile.DeviceOsVersion os_version = 4;
inline bool BidRequest_Mobile::has_os_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_Mobile::set_has_os_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_Mobile::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_Mobile::clear_os_version() {
  if (os_version_ != NULL) os_version_->::BidRequest_Mobile_DeviceOsVersion::Clear();
  clear_has_os_version();
}
inline const ::BidRequest_Mobile_DeviceOsVersion& BidRequest_Mobile::os_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.os_version)
  return os_version_ != NULL ? *os_version_ : *default_instance_->os_version_;
}
inline ::BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile::mutable_os_version() {
  set_has_os_version();
  if (os_version_ == NULL) os_version_ = new ::BidRequest_Mobile_DeviceOsVersion;
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.os_version)
  return os_version_;
}
inline ::BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile::release_os_version() {
  clear_has_os_version();
  ::BidRequest_Mobile_DeviceOsVersion* temp = os_version_;
  os_version_ = NULL;
  return temp;
}
inline void BidRequest_Mobile::set_allocated_os_version(::BidRequest_Mobile_DeviceOsVersion* os_version) {
  delete os_version_;
  os_version_ = os_version;
  if (os_version) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.os_version)
}

// optional string brand = 5;
inline bool BidRequest_Mobile::has_brand() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_Mobile::set_has_brand() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_Mobile::clear_has_brand() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_Mobile::clear_brand() {
  if (brand_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_->clear();
  }
  clear_has_brand();
}
inline const ::std::string& BidRequest_Mobile::brand() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.brand)
  return *brand_;
}
inline void BidRequest_Mobile::set_brand(const ::std::string& value) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  brand_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.brand)
}
inline void BidRequest_Mobile::set_brand(const char* value) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  brand_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.brand)
}
inline void BidRequest_Mobile::set_brand(const char* value, size_t size) {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  brand_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.brand)
}
inline ::std::string* BidRequest_Mobile::mutable_brand() {
  set_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    brand_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.brand)
  return brand_;
}
inline ::std::string* BidRequest_Mobile::release_brand() {
  clear_has_brand();
  if (brand_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = brand_;
    brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile::set_allocated_brand(::std::string* brand) {
  if (brand_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete brand_;
  }
  if (brand) {
    set_has_brand();
    brand_ = brand;
  } else {
    clear_has_brand();
    brand_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.brand)
}

// optional string model = 6;
inline bool BidRequest_Mobile::has_model() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_Mobile::set_has_model() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_Mobile::clear_has_model() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_Mobile::clear_model() {
  if (model_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_->clear();
  }
  clear_has_model();
}
inline const ::std::string& BidRequest_Mobile::model() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.model)
  return *model_;
}
inline void BidRequest_Mobile::set_model(const ::std::string& value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.model)
}
inline void BidRequest_Mobile::set_model(const char* value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.model)
}
inline void BidRequest_Mobile::set_model(const char* value, size_t size) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.model)
}
inline ::std::string* BidRequest_Mobile::mutable_model() {
  set_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    model_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.model)
  return model_;
}
inline ::std::string* BidRequest_Mobile::release_model() {
  clear_has_model();
  if (model_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = model_;
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile::set_allocated_model(::std::string* model) {
  if (model_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete model_;
  }
  if (model) {
    set_has_model();
    model_ = model;
  } else {
    clear_has_model();
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.model)
}

// optional int32 screen_width = 7;
inline bool BidRequest_Mobile::has_screen_width() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_width() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_Mobile::clear_has_screen_width() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_Mobile::clear_screen_width() {
  screen_width_ = 0;
  clear_has_screen_width();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_width() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.screen_width)
  return screen_width_;
}
inline void BidRequest_Mobile::set_screen_width(::google::protobuf::int32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.screen_width)
}

// optional int32 screen_height = 8;
inline bool BidRequest_Mobile::has_screen_height() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_height() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest_Mobile::clear_has_screen_height() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest_Mobile::clear_screen_height() {
  screen_height_ = 0;
  clear_has_screen_height();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_height() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.screen_height)
  return screen_height_;
}
inline void BidRequest_Mobile::set_screen_height(::google::protobuf::int32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.screen_height)
}

// optional int64 carrier_id = 9;
inline bool BidRequest_Mobile::has_carrier_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest_Mobile::set_has_carrier_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest_Mobile::clear_has_carrier_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest_Mobile::clear_carrier_id() {
  carrier_id_ = GOOGLE_LONGLONG(0);
  clear_has_carrier_id();
}
inline ::google::protobuf::int64 BidRequest_Mobile::carrier_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.carrier_id)
  return carrier_id_;
}
inline void BidRequest_Mobile::set_carrier_id(::google::protobuf::int64 value) {
  set_has_carrier_id();
  carrier_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.carrier_id)
}

// optional .BidRequest.Mobile.WirelessNetworkType wireless_network_type = 10;
inline bool BidRequest_Mobile::has_wireless_network_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest_Mobile::set_has_wireless_network_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest_Mobile::clear_has_wireless_network_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest_Mobile::clear_wireless_network_type() {
  wireless_network_type_ = 0;
  clear_has_wireless_network_type();
}
inline ::BidRequest_Mobile_WirelessNetworkType BidRequest_Mobile::wireless_network_type() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.wireless_network_type)
  return static_cast< ::BidRequest_Mobile_WirelessNetworkType >(wireless_network_type_);
}
inline void BidRequest_Mobile::set_wireless_network_type(::BidRequest_Mobile_WirelessNetworkType value) {
  assert(::BidRequest_Mobile_WirelessNetworkType_IsValid(value));
  set_has_wireless_network_type();
  wireless_network_type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.wireless_network_type)
}

// optional string DEPRECATED_for_advertising_id = 11;
inline bool BidRequest_Mobile::has_deprecated_for_advertising_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_for_advertising_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest_Mobile::clear_has_deprecated_for_advertising_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest_Mobile::clear_deprecated_for_advertising_id() {
  if (deprecated_for_advertising_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_for_advertising_id_->clear();
  }
  clear_has_deprecated_for_advertising_id();
}
inline const ::std::string& BidRequest_Mobile::deprecated_for_advertising_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.DEPRECATED_for_advertising_id)
  return *deprecated_for_advertising_id_;
}
inline void BidRequest_Mobile::set_deprecated_for_advertising_id(const ::std::string& value) {
  set_has_deprecated_for_advertising_id();
  if (deprecated_for_advertising_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_for_advertising_id_ = new ::std::string;
  }
  deprecated_for_advertising_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Mobile.DEPRECATED_for_advertising_id)
}
inline void BidRequest_Mobile::set_deprecated_for_advertising_id(const char* value) {
  set_has_deprecated_for_advertising_id();
  if (deprecated_for_advertising_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_for_advertising_id_ = new ::std::string;
  }
  deprecated_for_advertising_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Mobile.DEPRECATED_for_advertising_id)
}
inline void BidRequest_Mobile::set_deprecated_for_advertising_id(const char* value, size_t size) {
  set_has_deprecated_for_advertising_id();
  if (deprecated_for_advertising_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_for_advertising_id_ = new ::std::string;
  }
  deprecated_for_advertising_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Mobile.DEPRECATED_for_advertising_id)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_for_advertising_id() {
  set_has_deprecated_for_advertising_id();
  if (deprecated_for_advertising_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deprecated_for_advertising_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.DEPRECATED_for_advertising_id)
  return deprecated_for_advertising_id_;
}
inline ::std::string* BidRequest_Mobile::release_deprecated_for_advertising_id() {
  clear_has_deprecated_for_advertising_id();
  if (deprecated_for_advertising_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deprecated_for_advertising_id_;
    deprecated_for_advertising_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Mobile::set_allocated_deprecated_for_advertising_id(::std::string* deprecated_for_advertising_id) {
  if (deprecated_for_advertising_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deprecated_for_advertising_id_;
  }
  if (deprecated_for_advertising_id) {
    set_has_deprecated_for_advertising_id();
    deprecated_for_advertising_id_ = deprecated_for_advertising_id;
  } else {
    clear_has_deprecated_for_advertising_id();
    deprecated_for_advertising_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.DEPRECATED_for_advertising_id)
}

// repeated .BidRequest.Mobile.ForAdvertisingID for_advertising_id = 14;
inline int BidRequest_Mobile::for_advertising_id_size() const {
  return for_advertising_id_.size();
}
inline void BidRequest_Mobile::clear_for_advertising_id() {
  for_advertising_id_.Clear();
}
inline const ::BidRequest_Mobile_ForAdvertisingID& BidRequest_Mobile::for_advertising_id(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_.Get(index);
}
inline ::BidRequest_Mobile_ForAdvertisingID* BidRequest_Mobile::mutable_for_advertising_id(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_.Mutable(index);
}
inline ::BidRequest_Mobile_ForAdvertisingID* BidRequest_Mobile::add_for_advertising_id() {
  // @@protoc_insertion_point(field_add:BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_ForAdvertisingID >&
BidRequest_Mobile::for_advertising_id() const {
  // @@protoc_insertion_point(field_list:BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_Mobile_ForAdvertisingID >*
BidRequest_Mobile::mutable_for_advertising_id() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Mobile.for_advertising_id)
  return &for_advertising_id_;
}

// optional .BidRequest.Mobile.MobileApp mobile_app = 12;
inline bool BidRequest_Mobile::has_mobile_app() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest_Mobile::set_has_mobile_app() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest_Mobile::clear_has_mobile_app() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest_Mobile::clear_mobile_app() {
  if (mobile_app_ != NULL) mobile_app_->::BidRequest_Mobile_MobileApp::Clear();
  clear_has_mobile_app();
}
inline const ::BidRequest_Mobile_MobileApp& BidRequest_Mobile::mobile_app() const {
  // @@protoc_insertion_point(field_get:BidRequest.Mobile.mobile_app)
  return mobile_app_ != NULL ? *mobile_app_ : *default_instance_->mobile_app_;
}
inline ::BidRequest_Mobile_MobileApp* BidRequest_Mobile::mutable_mobile_app() {
  set_has_mobile_app();
  if (mobile_app_ == NULL) mobile_app_ = new ::BidRequest_Mobile_MobileApp;
  // @@protoc_insertion_point(field_mutable:BidRequest.Mobile.mobile_app)
  return mobile_app_;
}
inline ::BidRequest_Mobile_MobileApp* BidRequest_Mobile::release_mobile_app() {
  clear_has_mobile_app();
  ::BidRequest_Mobile_MobileApp* temp = mobile_app_;
  mobile_app_ = NULL;
  return temp;
}
inline void BidRequest_Mobile::set_allocated_mobile_app(::BidRequest_Mobile_MobileApp* mobile_app) {
  delete mobile_app_;
  mobile_app_ = mobile_app;
  if (mobile_app) {
    set_has_mobile_app();
  } else {
    clear_has_mobile_app();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Mobile.mobile_app)
}

// -------------------------------------------------------------------

// BidRequest_Video

// optional string title = 1;
inline bool BidRequest_Video::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Video::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Video::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Video::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& BidRequest_Video::title() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.title)
  return *title_;
}
inline void BidRequest_Video::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.title)
}
inline void BidRequest_Video::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Video.title)
}
inline void BidRequest_Video::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Video.title)
}
inline ::std::string* BidRequest_Video::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.Video.title)
  return title_;
}
inline ::std::string* BidRequest_Video::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_Video::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.Video.title)
}

// repeated string tags = 2;
inline int BidRequest_Video::tags_size() const {
  return tags_.size();
}
inline void BidRequest_Video::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& BidRequest_Video::tags(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.tags)
  return tags_.Get(index);
}
inline ::std::string* BidRequest_Video::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.Video.tags)
  return tags_.Mutable(index);
}
inline void BidRequest_Video::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.Video.tags)
  tags_.Mutable(index)->assign(value);
}
inline void BidRequest_Video::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.Video.tags)
}
inline void BidRequest_Video::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.Video.tags)
}
inline ::std::string* BidRequest_Video::add_tags() {
  return tags_.Add();
}
inline void BidRequest_Video::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.Video.tags)
}
inline void BidRequest_Video::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.Video.tags)
}
inline void BidRequest_Video::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.Video.tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_Video::tags() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_Video::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.tags)
  return &tags_;
}

// optional int32 content_length = 3;
inline bool BidRequest_Video::has_content_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Video::set_has_content_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Video::clear_has_content_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Video::clear_content_length() {
  content_length_ = 0;
  clear_has_content_length();
}
inline ::google::protobuf::int32 BidRequest_Video::content_length() const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.content_length)
  return content_length_;
}
inline void BidRequest_Video::set_content_length(::google::protobuf::int32 value) {
  set_has_content_length();
  content_length_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.Video.content_length)
}

// repeated int64 channel_id = 4;
inline int BidRequest_Video::channel_id_size() const {
  return channel_id_.size();
}
inline void BidRequest_Video::clear_channel_id() {
  channel_id_.Clear();
}
inline ::google::protobuf::int64 BidRequest_Video::channel_id(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.Video.channel_id)
  return channel_id_.Get(index);
}
inline void BidRequest_Video::set_channel_id(int index, ::google::protobuf::int64 value) {
  channel_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.Video.channel_id)
}
inline void BidRequest_Video::add_channel_id(::google::protobuf::int64 value) {
  channel_id_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.Video.channel_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BidRequest_Video::channel_id() const {
  // @@protoc_insertion_point(field_list:BidRequest.Video.channel_id)
  return channel_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BidRequest_Video::mutable_channel_id() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.Video.channel_id)
  return &channel_id_;
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_VideoInfo

// optional int32 max_video_duration = 1;
inline bool BidRequest_AdSlot_VideoInfo::has_max_video_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_VideoInfo::set_has_max_video_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_has_max_video_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_max_video_duration() {
  max_video_duration_ = 0;
  clear_has_max_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_VideoInfo::max_video_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.VideoInfo.max_video_duration)
  return max_video_duration_;
}
inline void BidRequest_AdSlot_VideoInfo::set_max_video_duration(::google::protobuf::int32 value) {
  set_has_max_video_duration();
  max_video_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.VideoInfo.max_video_duration)
}

// optional int32 min_video_duration = 2;
inline bool BidRequest_AdSlot_VideoInfo::has_min_video_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_VideoInfo::set_has_min_video_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_has_min_video_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_min_video_duration() {
  min_video_duration_ = 0;
  clear_has_min_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_VideoInfo::min_video_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.VideoInfo.min_video_duration)
  return min_video_duration_;
}
inline void BidRequest_AdSlot_VideoInfo::set_min_video_duration(::google::protobuf::int32 value) {
  set_has_min_video_duration();
  min_video_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.VideoInfo.min_video_duration)
}

// optional int32 video_start_delay = 3;
inline bool BidRequest_AdSlot_VideoInfo::has_video_start_delay() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot_VideoInfo::set_has_video_start_delay() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_has_video_start_delay() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_video_start_delay() {
  video_start_delay_ = 0;
  clear_has_video_start_delay();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_VideoInfo::video_start_delay() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.VideoInfo.video_start_delay)
  return video_start_delay_;
}
inline void BidRequest_AdSlot_VideoInfo::set_video_start_delay(::google::protobuf::int32 value) {
  set_has_video_start_delay();
  video_start_delay_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.VideoInfo.video_start_delay)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_LinkUnitInfo

// repeated int32 style_type = 1;
inline int BidRequest_AdSlot_LinkUnitInfo::style_type_size() const {
  return style_type_.size();
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_style_type() {
  style_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_LinkUnitInfo::style_type(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.LinkUnitInfo.style_type)
  return style_type_.Get(index);
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_style_type(int index, ::google::protobuf::int32 value) {
  style_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.LinkUnitInfo.style_type)
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_style_type(::google::protobuf::int32 value) {
  style_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.LinkUnitInfo.style_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_LinkUnitInfo::style_type() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.LinkUnitInfo.style_type)
  return style_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_LinkUnitInfo::mutable_style_type() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.LinkUnitInfo.style_type)
  return &style_type_;
}

// optional int32 req_keyword_num = 2;
inline bool BidRequest_AdSlot_LinkUnitInfo::has_req_keyword_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_has_req_keyword_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_has_req_keyword_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_req_keyword_num() {
  req_keyword_num_ = 0;
  clear_has_req_keyword_num();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_LinkUnitInfo::req_keyword_num() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.LinkUnitInfo.req_keyword_num)
  return req_keyword_num_;
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_req_keyword_num(::google::protobuf::int32 value) {
  set_has_req_keyword_num();
  req_keyword_num_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.LinkUnitInfo.req_keyword_num)
}

// repeated string proposed_keyword = 3;
inline int BidRequest_AdSlot_LinkUnitInfo::proposed_keyword_size() const {
  return proposed_keyword_.size();
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_proposed_keyword() {
  proposed_keyword_.Clear();
}
inline const ::std::string& BidRequest_AdSlot_LinkUnitInfo::proposed_keyword(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_.Get(index);
}
inline ::std::string* BidRequest_AdSlot_LinkUnitInfo::mutable_proposed_keyword(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_.Mutable(index);
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_proposed_keyword(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  proposed_keyword_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_proposed_keyword(int index, const char* value) {
  proposed_keyword_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_proposed_keyword(int index, const char* value, size_t size) {
  proposed_keyword_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline ::std::string* BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword() {
  return proposed_keyword_.Add();
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword(const ::std::string& value) {
  proposed_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword(const char* value) {
  proposed_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword(const char* value, size_t size) {
  proposed_keyword_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot_LinkUnitInfo::proposed_keyword() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot_LinkUnitInfo::mutable_proposed_keyword() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return &proposed_keyword_;
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder

// optional string order_id = 1;
inline bool BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_order_id() {
  if (order_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_id_->clear();
  }
  clear_has_order_id();
}
inline const ::std::string& BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::order_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
  return *order_id_;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_order_id(const ::std::string& value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_order_id(const char* value) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_id_ = new ::std::string;
  }
  order_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}
inline ::std::string* BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::mutable_order_id() {
  set_has_order_id();
  if (order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    order_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
  return order_id_;
}
inline ::std::string* BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::release_order_id() {
  clear_has_order_id();
  if (order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = order_id_;
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_allocated_order_id(::std::string* order_id) {
  if (order_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete order_id_;
  }
  if (order_id) {
    set_has_order_id();
    order_id_ = order_id;
  } else {
    clear_has_order_id();
    order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}

// optional int64 fixed_cpm = 2;
inline bool BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::has_fixed_cpm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_has_fixed_cpm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_has_fixed_cpm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_fixed_cpm() {
  fixed_cpm_ = GOOGLE_LONGLONG(0);
  clear_has_fixed_cpm();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::fixed_cpm() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.fixed_cpm)
  return fixed_cpm_;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_fixed_cpm(::google::protobuf::int64 value) {
  set_has_fixed_cpm();
  fixed_cpm_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.fixed_cpm)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_PreferredOrderInfo

// repeated .BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder preferred_orders = 1;
inline int BidRequest_AdSlot_PreferredOrderInfo::preferred_orders_size() const {
  return preferred_orders_.size();
}
inline void BidRequest_AdSlot_PreferredOrderInfo::clear_preferred_orders() {
  preferred_orders_.Clear();
}
inline const ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& BidRequest_AdSlot_PreferredOrderInfo::preferred_orders(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_.Get(index);
}
inline ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* BidRequest_AdSlot_PreferredOrderInfo::mutable_preferred_orders(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_.Mutable(index);
}
inline ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* BidRequest_AdSlot_PreferredOrderInfo::add_preferred_orders() {
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >&
BidRequest_AdSlot_PreferredOrderInfo::preferred_orders() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >*
BidRequest_AdSlot_PreferredOrderInfo::mutable_preferred_orders() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return &preferred_orders_;
}

// optional bool allow_auction = 2 [default = true];
inline bool BidRequest_AdSlot_PreferredOrderInfo::has_allow_auction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::set_has_allow_auction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::clear_has_allow_auction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::clear_allow_auction() {
  allow_auction_ = true;
  clear_has_allow_auction();
}
inline bool BidRequest_AdSlot_PreferredOrderInfo::allow_auction() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.PreferredOrderInfo.allow_auction)
  return allow_auction_;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::set_allow_auction(bool value) {
  set_has_allow_auction();
  allow_auction_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.PreferredOrderInfo.allow_auction)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_ExpandCreativeInfo

// repeated .BidRequest.AdSlot.ExpandCreativeInfo.ActionType expand_action_type = 1;
inline int BidRequest_AdSlot_ExpandCreativeInfo::expand_action_type_size() const {
  return expand_action_type_.size();
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_action_type() {
  expand_action_type_.Clear();
}
inline ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType BidRequest_AdSlot_ExpandCreativeInfo::expand_action_type(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
  return static_cast< ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType >(expand_action_type_.Get(index));
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_action_type(int index, ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value) {
  assert(::BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(value));
  expand_action_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::add_expand_action_type(::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value) {
  assert(::BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(value));
  expand_action_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_AdSlot_ExpandCreativeInfo::expand_action_type() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
  return expand_action_type_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_AdSlot_ExpandCreativeInfo::mutable_expand_action_type() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
  return &expand_action_type_;
}

// optional .BidRequest.AdSlot.ExpandCreativeInfo.Direction expand_direction = 2;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_direction() {
  expand_direction_ = 0;
  clear_has_expand_direction();
}
inline ::BidRequest_AdSlot_ExpandCreativeInfo_Direction BidRequest_AdSlot_ExpandCreativeInfo::expand_direction() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ExpandCreativeInfo.expand_direction)
  return static_cast< ::BidRequest_AdSlot_ExpandCreativeInfo_Direction >(expand_direction_);
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_direction(::BidRequest_AdSlot_ExpandCreativeInfo_Direction value) {
  assert(::BidRequest_AdSlot_ExpandCreativeInfo_Direction_IsValid(value));
  set_has_expand_direction();
  expand_direction_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ExpandCreativeInfo.expand_direction)
}

// repeated int32 expand_creative_type = 3 [packed = true];
inline int BidRequest_AdSlot_ExpandCreativeInfo::expand_creative_type_size() const {
  return expand_creative_type_.size();
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_creative_type() {
  expand_creative_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_creative_type(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
  return expand_creative_type_.Get(index);
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_creative_type(int index, ::google::protobuf::int32 value) {
  expand_creative_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::add_expand_creative_type(::google::protobuf::int32 value) {
  expand_creative_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_ExpandCreativeInfo::expand_creative_type() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
  return expand_creative_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_ExpandCreativeInfo::mutable_expand_creative_type() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
  return &expand_creative_type_;
}

// optional int32 expand_width = 4;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_width() {
  expand_width_ = 0;
  clear_has_expand_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_width() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ExpandCreativeInfo.expand_width)
  return expand_width_;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_width(::google::protobuf::int32 value) {
  set_has_expand_width();
  expand_width_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ExpandCreativeInfo.expand_width)
}

// optional int32 expand_height = 5;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_height() {
  expand_height_ = 0;
  clear_has_expand_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_height() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ExpandCreativeInfo.expand_height)
  return expand_height_;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_height(::google::protobuf::int32 value) {
  set_has_expand_height();
  expand_height_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ExpandCreativeInfo.expand_height)
}

// optional int32 expand_duration = 6;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_duration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_duration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_duration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_duration() {
  expand_duration_ = 0;
  clear_has_expand_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ExpandCreativeInfo.expand_duration)
  return expand_duration_;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_duration(::google::protobuf::int32 value) {
  set_has_expand_duration();
  expand_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ExpandCreativeInfo.expand_duration)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot

// optional uint64 ad_block_key = 1;
inline bool BidRequest_AdSlot::has_ad_block_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot::set_has_ad_block_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot::clear_has_ad_block_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot::clear_ad_block_key() {
  ad_block_key_ = GOOGLE_ULONGLONG(0);
  clear_has_ad_block_key();
}
inline ::google::protobuf::uint64 BidRequest_AdSlot::ad_block_key() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.ad_block_key)
  return ad_block_key_;
}
inline void BidRequest_AdSlot::set_ad_block_key(::google::protobuf::uint64 value) {
  set_has_ad_block_key();
  ad_block_key_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.ad_block_key)
}

// optional int32 sequence_id = 2;
inline bool BidRequest_AdSlot::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot::set_has_sequence_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot::clear_has_sequence_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot::clear_sequence_id() {
  sequence_id_ = 0;
  clear_has_sequence_id();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::sequence_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.sequence_id)
  return sequence_id_;
}
inline void BidRequest_AdSlot::set_sequence_id(::google::protobuf::int32 value) {
  set_has_sequence_id();
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.sequence_id)
}

// optional int32 adslot_type = 3;
inline bool BidRequest_AdSlot::has_adslot_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot::set_has_adslot_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot::clear_has_adslot_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot::clear_adslot_type() {
  adslot_type_ = 0;
  clear_has_adslot_type();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::adslot_type() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.adslot_type)
  return adslot_type_;
}
inline void BidRequest_AdSlot::set_adslot_type(::google::protobuf::int32 value) {
  set_has_adslot_type();
  adslot_type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.adslot_type)
}

// optional int32 width = 4;
inline bool BidRequest_AdSlot::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::width() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.width)
  return width_;
}
inline void BidRequest_AdSlot::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.width)
}

// optional int32 height = 5;
inline bool BidRequest_AdSlot::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_AdSlot::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_AdSlot::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_AdSlot::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::height() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.height)
  return height_;
}
inline void BidRequest_AdSlot::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.height)
}

// optional int32 slot_visibility = 6;
inline bool BidRequest_AdSlot::has_slot_visibility() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot::set_has_slot_visibility() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot::clear_has_slot_visibility() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot::clear_slot_visibility() {
  slot_visibility_ = 0;
  clear_has_slot_visibility();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::slot_visibility() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.slot_visibility)
  return slot_visibility_;
}
inline void BidRequest_AdSlot::set_slot_visibility(::google::protobuf::int32 value) {
  set_has_slot_visibility();
  slot_visibility_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.slot_visibility)
}

// repeated int32 creative_type = 7 [packed = true];
inline int BidRequest_AdSlot::creative_type_size() const {
  return creative_type_.size();
}
inline void BidRequest_AdSlot::clear_creative_type() {
  creative_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::creative_type(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.creative_type)
  return creative_type_.Get(index);
}
inline void BidRequest_AdSlot::set_creative_type(int index, ::google::protobuf::int32 value) {
  creative_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.creative_type)
}
inline void BidRequest_AdSlot::add_creative_type(::google::protobuf::int32 value) {
  creative_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.creative_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::creative_type() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.creative_type)
  return creative_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_creative_type() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.creative_type)
  return &creative_type_;
}

// repeated string excluded_landing_page_url = 8;
inline int BidRequest_AdSlot::excluded_landing_page_url_size() const {
  return excluded_landing_page_url_.size();
}
inline void BidRequest_AdSlot::clear_excluded_landing_page_url() {
  excluded_landing_page_url_.Clear();
}
inline const ::std::string& BidRequest_AdSlot::excluded_landing_page_url(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_.Get(index);
}
inline ::std::string* BidRequest_AdSlot::mutable_excluded_landing_page_url(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_.Mutable(index);
}
inline void BidRequest_AdSlot::set_excluded_landing_page_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.excluded_landing_page_url)
  excluded_landing_page_url_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot::set_excluded_landing_page_url(int index, const char* value) {
  excluded_landing_page_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.AdSlot.excluded_landing_page_url)
}
inline void BidRequest_AdSlot::set_excluded_landing_page_url(int index, const char* value, size_t size) {
  excluded_landing_page_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.AdSlot.excluded_landing_page_url)
}
inline ::std::string* BidRequest_AdSlot::add_excluded_landing_page_url() {
  return excluded_landing_page_url_.Add();
}
inline void BidRequest_AdSlot::add_excluded_landing_page_url(const ::std::string& value) {
  excluded_landing_page_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.excluded_landing_page_url)
}
inline void BidRequest_AdSlot::add_excluded_landing_page_url(const char* value) {
  excluded_landing_page_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.AdSlot.excluded_landing_page_url)
}
inline void BidRequest_AdSlot::add_excluded_landing_page_url(const char* value, size_t size) {
  excluded_landing_page_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.AdSlot.excluded_landing_page_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot::excluded_landing_page_url() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot::mutable_excluded_landing_page_url() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.excluded_landing_page_url)
  return &excluded_landing_page_url_;
}

// repeated fixed64 publisher_settings_list_id = 14;
inline int BidRequest_AdSlot::publisher_settings_list_id_size() const {
  return publisher_settings_list_id_.size();
}
inline void BidRequest_AdSlot::clear_publisher_settings_list_id() {
  publisher_settings_list_id_.Clear();
}
inline ::google::protobuf::uint64 BidRequest_AdSlot::publisher_settings_list_id(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.publisher_settings_list_id)
  return publisher_settings_list_id_.Get(index);
}
inline void BidRequest_AdSlot::set_publisher_settings_list_id(int index, ::google::protobuf::uint64 value) {
  publisher_settings_list_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.publisher_settings_list_id)
}
inline void BidRequest_AdSlot::add_publisher_settings_list_id(::google::protobuf::uint64 value) {
  publisher_settings_list_id_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.AdSlot.publisher_settings_list_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BidRequest_AdSlot::publisher_settings_list_id() const {
  // @@protoc_insertion_point(field_list:BidRequest.AdSlot.publisher_settings_list_id)
  return publisher_settings_list_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BidRequest_AdSlot::mutable_publisher_settings_list_id() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.AdSlot.publisher_settings_list_id)
  return &publisher_settings_list_id_;
}

// optional int32 minimum_cpm = 9;
inline bool BidRequest_AdSlot::has_minimum_cpm() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest_AdSlot::set_has_minimum_cpm() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest_AdSlot::clear_has_minimum_cpm() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest_AdSlot::clear_minimum_cpm() {
  minimum_cpm_ = 0;
  clear_has_minimum_cpm();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::minimum_cpm() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.minimum_cpm)
  return minimum_cpm_;
}
inline void BidRequest_AdSlot::set_minimum_cpm(::google::protobuf::int32 value) {
  set_has_minimum_cpm();
  minimum_cpm_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.minimum_cpm)
}

// optional int32 max_video_duration = 10;
inline bool BidRequest_AdSlot::has_max_video_duration() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest_AdSlot::set_has_max_video_duration() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest_AdSlot::clear_has_max_video_duration() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest_AdSlot::clear_max_video_duration() {
  max_video_duration_ = 0;
  clear_has_max_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::max_video_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.max_video_duration)
  return max_video_duration_;
}
inline void BidRequest_AdSlot::set_max_video_duration(::google::protobuf::int32 value) {
  set_has_max_video_duration();
  max_video_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.max_video_duration)
}

// optional int32 min_video_duration = 11;
inline bool BidRequest_AdSlot::has_min_video_duration() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest_AdSlot::set_has_min_video_duration() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest_AdSlot::clear_has_min_video_duration() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest_AdSlot::clear_min_video_duration() {
  min_video_duration_ = 0;
  clear_has_min_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::min_video_duration() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.min_video_duration)
  return min_video_duration_;
}
inline void BidRequest_AdSlot::set_min_video_duration(::google::protobuf::int32 value) {
  set_has_min_video_duration();
  min_video_duration_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.min_video_duration)
}

// optional int32 video_start_delay = 12;
inline bool BidRequest_AdSlot::has_video_start_delay() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest_AdSlot::set_has_video_start_delay() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest_AdSlot::clear_has_video_start_delay() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest_AdSlot::clear_video_start_delay() {
  video_start_delay_ = 0;
  clear_has_video_start_delay();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::video_start_delay() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.video_start_delay)
  return video_start_delay_;
}
inline void BidRequest_AdSlot::set_video_start_delay(::google::protobuf::int32 value) {
  set_has_video_start_delay();
  video_start_delay_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.AdSlot.video_start_delay)
}

// optional .BidRequest.AdSlot.VideoInfo video_info = 15;
inline bool BidRequest_AdSlot::has_video_info() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest_AdSlot::set_has_video_info() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest_AdSlot::clear_has_video_info() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest_AdSlot::clear_video_info() {
  if (video_info_ != NULL) video_info_->::BidRequest_AdSlot_VideoInfo::Clear();
  clear_has_video_info();
}
inline const ::BidRequest_AdSlot_VideoInfo& BidRequest_AdSlot::video_info() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.video_info)
  return video_info_ != NULL ? *video_info_ : *default_instance_->video_info_;
}
inline ::BidRequest_AdSlot_VideoInfo* BidRequest_AdSlot::mutable_video_info() {
  set_has_video_info();
  if (video_info_ == NULL) video_info_ = new ::BidRequest_AdSlot_VideoInfo;
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.video_info)
  return video_info_;
}
inline ::BidRequest_AdSlot_VideoInfo* BidRequest_AdSlot::release_video_info() {
  clear_has_video_info();
  ::BidRequest_AdSlot_VideoInfo* temp = video_info_;
  video_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_video_info(::BidRequest_AdSlot_VideoInfo* video_info) {
  delete video_info_;
  video_info_ = video_info;
  if (video_info) {
    set_has_video_info();
  } else {
    clear_has_video_info();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.AdSlot.video_info)
}

// optional .BidRequest.AdSlot.LinkUnitInfo link_unit_info = 16;
inline bool BidRequest_AdSlot::has_link_unit_info() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest_AdSlot::set_has_link_unit_info() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest_AdSlot::clear_has_link_unit_info() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest_AdSlot::clear_link_unit_info() {
  if (link_unit_info_ != NULL) link_unit_info_->::BidRequest_AdSlot_LinkUnitInfo::Clear();
  clear_has_link_unit_info();
}
inline const ::BidRequest_AdSlot_LinkUnitInfo& BidRequest_AdSlot::link_unit_info() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.link_unit_info)
  return link_unit_info_ != NULL ? *link_unit_info_ : *default_instance_->link_unit_info_;
}
inline ::BidRequest_AdSlot_LinkUnitInfo* BidRequest_AdSlot::mutable_link_unit_info() {
  set_has_link_unit_info();
  if (link_unit_info_ == NULL) link_unit_info_ = new ::BidRequest_AdSlot_LinkUnitInfo;
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.link_unit_info)
  return link_unit_info_;
}
inline ::BidRequest_AdSlot_LinkUnitInfo* BidRequest_AdSlot::release_link_unit_info() {
  clear_has_link_unit_info();
  ::BidRequest_AdSlot_LinkUnitInfo* temp = link_unit_info_;
  link_unit_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_link_unit_info(::BidRequest_AdSlot_LinkUnitInfo* link_unit_info) {
  delete link_unit_info_;
  link_unit_info_ = link_unit_info;
  if (link_unit_info) {
    set_has_link_unit_info();
  } else {
    clear_has_link_unit_info();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.AdSlot.link_unit_info)
}

// optional .BidRequest.AdSlot.PreferredOrderInfo preferred_order_info = 13;
inline bool BidRequest_AdSlot::has_preferred_order_info() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest_AdSlot::set_has_preferred_order_info() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest_AdSlot::clear_has_preferred_order_info() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest_AdSlot::clear_preferred_order_info() {
  if (preferred_order_info_ != NULL) preferred_order_info_->::BidRequest_AdSlot_PreferredOrderInfo::Clear();
  clear_has_preferred_order_info();
}
inline const ::BidRequest_AdSlot_PreferredOrderInfo& BidRequest_AdSlot::preferred_order_info() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.preferred_order_info)
  return preferred_order_info_ != NULL ? *preferred_order_info_ : *default_instance_->preferred_order_info_;
}
inline ::BidRequest_AdSlot_PreferredOrderInfo* BidRequest_AdSlot::mutable_preferred_order_info() {
  set_has_preferred_order_info();
  if (preferred_order_info_ == NULL) preferred_order_info_ = new ::BidRequest_AdSlot_PreferredOrderInfo;
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.preferred_order_info)
  return preferred_order_info_;
}
inline ::BidRequest_AdSlot_PreferredOrderInfo* BidRequest_AdSlot::release_preferred_order_info() {
  clear_has_preferred_order_info();
  ::BidRequest_AdSlot_PreferredOrderInfo* temp = preferred_order_info_;
  preferred_order_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_preferred_order_info(::BidRequest_AdSlot_PreferredOrderInfo* preferred_order_info) {
  delete preferred_order_info_;
  preferred_order_info_ = preferred_order_info;
  if (preferred_order_info) {
    set_has_preferred_order_info();
  } else {
    clear_has_preferred_order_info();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.AdSlot.preferred_order_info)
}

// optional .BidRequest.AdSlot.ExpandCreativeInfo expand_creative_info = 17;
inline bool BidRequest_AdSlot::has_expand_creative_info() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidRequest_AdSlot::set_has_expand_creative_info() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidRequest_AdSlot::clear_has_expand_creative_info() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidRequest_AdSlot::clear_expand_creative_info() {
  if (expand_creative_info_ != NULL) expand_creative_info_->::BidRequest_AdSlot_ExpandCreativeInfo::Clear();
  clear_has_expand_creative_info();
}
inline const ::BidRequest_AdSlot_ExpandCreativeInfo& BidRequest_AdSlot::expand_creative_info() const {
  // @@protoc_insertion_point(field_get:BidRequest.AdSlot.expand_creative_info)
  return expand_creative_info_ != NULL ? *expand_creative_info_ : *default_instance_->expand_creative_info_;
}
inline ::BidRequest_AdSlot_ExpandCreativeInfo* BidRequest_AdSlot::mutable_expand_creative_info() {
  set_has_expand_creative_info();
  if (expand_creative_info_ == NULL) expand_creative_info_ = new ::BidRequest_AdSlot_ExpandCreativeInfo;
  // @@protoc_insertion_point(field_mutable:BidRequest.AdSlot.expand_creative_info)
  return expand_creative_info_;
}
inline ::BidRequest_AdSlot_ExpandCreativeInfo* BidRequest_AdSlot::release_expand_creative_info() {
  clear_has_expand_creative_info();
  ::BidRequest_AdSlot_ExpandCreativeInfo* temp = expand_creative_info_;
  expand_creative_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_expand_creative_info(::BidRequest_AdSlot_ExpandCreativeInfo* expand_creative_info) {
  delete expand_creative_info_;
  expand_creative_info_ = expand_creative_info;
  if (expand_creative_info) {
    set_has_expand_creative_info();
  } else {
    clear_has_expand_creative_info();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.AdSlot.expand_creative_info)
}

// -------------------------------------------------------------------

// BidRequest

// required string id = 1;
inline bool BidRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& BidRequest::id() const {
  // @@protoc_insertion_point(field_get:BidRequest.id)
  return *id_;
}
inline void BidRequest::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.id)
}
inline void BidRequest::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.id)
}
inline void BidRequest::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.id)
}
inline ::std::string* BidRequest::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.id)
  return id_;
}
inline ::std::string* BidRequest::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.id)
}

// optional string ip = 2;
inline bool BidRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& BidRequest::ip() const {
  // @@protoc_insertion_point(field_get:BidRequest.ip)
  return *ip_;
}
inline void BidRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.ip)
}
inline ::std::string* BidRequest::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.ip)
  return ip_;
}
inline ::std::string* BidRequest::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.ip)
}

// optional string user_agent = 3;
inline bool BidRequest::has_user_agent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest::set_has_user_agent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest::clear_user_agent() {
  if (user_agent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_agent_->clear();
  }
  clear_has_user_agent();
}
inline const ::std::string& BidRequest::user_agent() const {
  // @@protoc_insertion_point(field_get:BidRequest.user_agent)
  return *user_agent_;
}
inline void BidRequest::set_user_agent(const ::std::string& value) {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_agent_ = new ::std::string;
  }
  user_agent_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value) {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_agent_ = new ::std::string;
  }
  user_agent_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value, size_t size) {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_agent_ = new ::std::string;
  }
  user_agent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.user_agent)
}
inline ::std::string* BidRequest::mutable_user_agent() {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_agent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.user_agent)
  return user_agent_;
}
inline ::std::string* BidRequest::release_user_agent() {
  clear_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_agent_;
    user_agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_agent_;
  }
  if (user_agent) {
    set_has_user_agent();
    user_agent_ = user_agent;
  } else {
    clear_has_user_agent();
    user_agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.user_agent)
}

// optional string baidu_user_id = 4;
inline bool BidRequest::has_baidu_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest::set_has_baidu_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest::clear_has_baidu_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest::clear_baidu_user_id() {
  if (baidu_user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_->clear();
  }
  clear_has_baidu_user_id();
}
inline const ::std::string& BidRequest::baidu_user_id() const {
  // @@protoc_insertion_point(field_get:BidRequest.baidu_user_id)
  return *baidu_user_id_;
}
inline void BidRequest::set_baidu_user_id(const ::std::string& value) {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  baidu_user_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.baidu_user_id)
}
inline void BidRequest::set_baidu_user_id(const char* value) {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  baidu_user_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.baidu_user_id)
}
inline void BidRequest::set_baidu_user_id(const char* value, size_t size) {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  baidu_user_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.baidu_user_id)
}
inline ::std::string* BidRequest::mutable_baidu_user_id() {
  set_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    baidu_user_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.baidu_user_id)
  return baidu_user_id_;
}
inline ::std::string* BidRequest::release_baidu_user_id() {
  clear_has_baidu_user_id();
  if (baidu_user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = baidu_user_id_;
    baidu_user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_baidu_user_id(::std::string* baidu_user_id) {
  if (baidu_user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete baidu_user_id_;
  }
  if (baidu_user_id) {
    set_has_baidu_user_id();
    baidu_user_id_ = baidu_user_id;
  } else {
    clear_has_baidu_user_id();
    baidu_user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.baidu_user_id)
}

// optional int32 baidu_user_id_version = 5;
inline bool BidRequest::has_baidu_user_id_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest::set_has_baidu_user_id_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest::clear_has_baidu_user_id_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest::clear_baidu_user_id_version() {
  baidu_user_id_version_ = 0;
  clear_has_baidu_user_id_version();
}
inline ::google::protobuf::int32 BidRequest::baidu_user_id_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.baidu_user_id_version)
  return baidu_user_id_version_;
}
inline void BidRequest::set_baidu_user_id_version(::google::protobuf::int32 value) {
  set_has_baidu_user_id_version();
  baidu_user_id_version_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.baidu_user_id_version)
}

// repeated .BidRequest.BaiduId baidu_id_list = 8;
inline int BidRequest::baidu_id_list_size() const {
  return baidu_id_list_.size();
}
inline void BidRequest::clear_baidu_id_list() {
  baidu_id_list_.Clear();
}
inline const ::BidRequest_BaiduId& BidRequest::baidu_id_list(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.baidu_id_list)
  return baidu_id_list_.Get(index);
}
inline ::BidRequest_BaiduId* BidRequest::mutable_baidu_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.baidu_id_list)
  return baidu_id_list_.Mutable(index);
}
inline ::BidRequest_BaiduId* BidRequest::add_baidu_id_list() {
  // @@protoc_insertion_point(field_add:BidRequest.baidu_id_list)
  return baidu_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_BaiduId >&
BidRequest::baidu_id_list() const {
  // @@protoc_insertion_point(field_list:BidRequest.baidu_id_list)
  return baidu_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_BaiduId >*
BidRequest::mutable_baidu_id_list() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.baidu_id_list)
  return &baidu_id_list_;
}

// repeated int64 user_category = 6;
inline int BidRequest::user_category_size() const {
  return user_category_.size();
}
inline void BidRequest::clear_user_category() {
  user_category_.Clear();
}
inline ::google::protobuf::int64 BidRequest::user_category(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.user_category)
  return user_category_.Get(index);
}
inline void BidRequest::set_user_category(int index, ::google::protobuf::int64 value) {
  user_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.user_category)
}
inline void BidRequest::add_user_category(::google::protobuf::int64 value) {
  user_category_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.user_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BidRequest::user_category() const {
  // @@protoc_insertion_point(field_list:BidRequest.user_category)
  return user_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BidRequest::mutable_user_category() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.user_category)
  return &user_category_;
}

// optional .BidRequest.Gender gender = 7;
inline bool BidRequest::has_gender() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest::set_has_gender() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest::clear_has_gender() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::BidRequest_Gender BidRequest::gender() const {
  // @@protoc_insertion_point(field_get:BidRequest.gender)
  return static_cast< ::BidRequest_Gender >(gender_);
}
inline void BidRequest::set_gender(::BidRequest_Gender value) {
  assert(::BidRequest_Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.gender)
}

// optional string detected_language = 9;
inline bool BidRequest::has_detected_language() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest::set_has_detected_language() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest::clear_has_detected_language() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest::clear_detected_language() {
  if (detected_language_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    detected_language_->clear();
  }
  clear_has_detected_language();
}
inline const ::std::string& BidRequest::detected_language() const {
  // @@protoc_insertion_point(field_get:BidRequest.detected_language)
  return *detected_language_;
}
inline void BidRequest::set_detected_language(const ::std::string& value) {
  set_has_detected_language();
  if (detected_language_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    detected_language_ = new ::std::string;
  }
  detected_language_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(const char* value) {
  set_has_detected_language();
  if (detected_language_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    detected_language_ = new ::std::string;
  }
  detected_language_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(const char* value, size_t size) {
  set_has_detected_language();
  if (detected_language_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    detected_language_ = new ::std::string;
  }
  detected_language_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.detected_language)
}
inline ::std::string* BidRequest::mutable_detected_language() {
  set_has_detected_language();
  if (detected_language_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    detected_language_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.detected_language)
  return detected_language_;
}
inline ::std::string* BidRequest::release_detected_language() {
  clear_has_detected_language();
  if (detected_language_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = detected_language_;
    detected_language_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_detected_language(::std::string* detected_language) {
  if (detected_language_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete detected_language_;
  }
  if (detected_language) {
    set_has_detected_language();
    detected_language_ = detected_language;
  } else {
    clear_has_detected_language();
    detected_language_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.detected_language)
}

// optional string flash_version = 10;
inline bool BidRequest::has_flash_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest::set_has_flash_version() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest::clear_has_flash_version() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest::clear_flash_version() {
  if (flash_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    flash_version_->clear();
  }
  clear_has_flash_version();
}
inline const ::std::string& BidRequest::flash_version() const {
  // @@protoc_insertion_point(field_get:BidRequest.flash_version)
  return *flash_version_;
}
inline void BidRequest::set_flash_version(const ::std::string& value) {
  set_has_flash_version();
  if (flash_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    flash_version_ = new ::std::string;
  }
  flash_version_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.flash_version)
}
inline void BidRequest::set_flash_version(const char* value) {
  set_has_flash_version();
  if (flash_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    flash_version_ = new ::std::string;
  }
  flash_version_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.flash_version)
}
inline void BidRequest::set_flash_version(const char* value, size_t size) {
  set_has_flash_version();
  if (flash_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    flash_version_ = new ::std::string;
  }
  flash_version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.flash_version)
}
inline ::std::string* BidRequest::mutable_flash_version() {
  set_has_flash_version();
  if (flash_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    flash_version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.flash_version)
  return flash_version_;
}
inline ::std::string* BidRequest::release_flash_version() {
  clear_has_flash_version();
  if (flash_version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = flash_version_;
    flash_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_flash_version(::std::string* flash_version) {
  if (flash_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete flash_version_;
  }
  if (flash_version) {
    set_has_flash_version();
    flash_version_ = flash_version;
  } else {
    clear_has_flash_version();
    flash_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.flash_version)
}

// optional .BidRequest.Geo user_geo_info = 28;
inline bool BidRequest::has_user_geo_info() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest::set_has_user_geo_info() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest::clear_has_user_geo_info() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest::clear_user_geo_info() {
  if (user_geo_info_ != NULL) user_geo_info_->::BidRequest_Geo::Clear();
  clear_has_user_geo_info();
}
inline const ::BidRequest_Geo& BidRequest::user_geo_info() const {
  // @@protoc_insertion_point(field_get:BidRequest.user_geo_info)
  return user_geo_info_ != NULL ? *user_geo_info_ : *default_instance_->user_geo_info_;
}
inline ::BidRequest_Geo* BidRequest::mutable_user_geo_info() {
  set_has_user_geo_info();
  if (user_geo_info_ == NULL) user_geo_info_ = new ::BidRequest_Geo;
  // @@protoc_insertion_point(field_mutable:BidRequest.user_geo_info)
  return user_geo_info_;
}
inline ::BidRequest_Geo* BidRequest::release_user_geo_info() {
  clear_has_user_geo_info();
  ::BidRequest_Geo* temp = user_geo_info_;
  user_geo_info_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_user_geo_info(::BidRequest_Geo* user_geo_info) {
  delete user_geo_info_;
  user_geo_info_ = user_geo_info;
  if (user_geo_info) {
    set_has_user_geo_info();
  } else {
    clear_has_user_geo_info();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.user_geo_info)
}

// optional string url = 11;
inline bool BidRequest::has_url() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest::set_has_url() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& BidRequest::url() const {
  // @@protoc_insertion_point(field_get:BidRequest.url)
  return *url_;
}
inline void BidRequest::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.url)
}
inline void BidRequest::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.url)
}
inline void BidRequest::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.url)
}
inline ::std::string* BidRequest::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.url)
  return url_;
}
inline ::std::string* BidRequest::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.url)
}

// optional string referer = 12;
inline bool BidRequest::has_referer() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest::set_has_referer() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest::clear_has_referer() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest::clear_referer() {
  if (referer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referer_->clear();
  }
  clear_has_referer();
}
inline const ::std::string& BidRequest::referer() const {
  // @@protoc_insertion_point(field_get:BidRequest.referer)
  return *referer_;
}
inline void BidRequest::set_referer(const ::std::string& value) {
  set_has_referer();
  if (referer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referer_ = new ::std::string;
  }
  referer_->assign(value);
  // @@protoc_insertion_point(field_set:BidRequest.referer)
}
inline void BidRequest::set_referer(const char* value) {
  set_has_referer();
  if (referer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referer_ = new ::std::string;
  }
  referer_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.referer)
}
inline void BidRequest::set_referer(const char* value, size_t size) {
  set_has_referer();
  if (referer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referer_ = new ::std::string;
  }
  referer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.referer)
}
inline ::std::string* BidRequest::mutable_referer() {
  set_has_referer();
  if (referer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    referer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidRequest.referer)
  return referer_;
}
inline ::std::string* BidRequest::release_referer() {
  clear_has_referer();
  if (referer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = referer_;
    referer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidRequest::set_allocated_referer(::std::string* referer) {
  if (referer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete referer_;
  }
  if (referer) {
    set_has_referer();
    referer_ = referer;
  } else {
    clear_has_referer();
    referer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.referer)
}

// optional int32 site_category = 13;
inline bool BidRequest::has_site_category() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest::set_has_site_category() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest::clear_has_site_category() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest::clear_site_category() {
  site_category_ = 0;
  clear_has_site_category();
}
inline ::google::protobuf::int32 BidRequest::site_category() const {
  // @@protoc_insertion_point(field_get:BidRequest.site_category)
  return site_category_;
}
inline void BidRequest::set_site_category(::google::protobuf::int32 value) {
  set_has_site_category();
  site_category_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.site_category)
}

// optional int32 site_quality = 14;
inline bool BidRequest::has_site_quality() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest::set_has_site_quality() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest::clear_has_site_quality() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest::clear_site_quality() {
  site_quality_ = 0;
  clear_has_site_quality();
}
inline ::google::protobuf::int32 BidRequest::site_quality() const {
  // @@protoc_insertion_point(field_get:BidRequest.site_quality)
  return site_quality_;
}
inline void BidRequest::set_site_quality(::google::protobuf::int32 value) {
  set_has_site_quality();
  site_quality_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.site_quality)
}

// optional int32 page_type = 15;
inline bool BidRequest::has_page_type() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest::set_has_page_type() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest::clear_has_page_type() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest::clear_page_type() {
  page_type_ = 0;
  clear_has_page_type();
}
inline ::google::protobuf::int32 BidRequest::page_type() const {
  // @@protoc_insertion_point(field_get:BidRequest.page_type)
  return page_type_;
}
inline void BidRequest::set_page_type(::google::protobuf::int32 value) {
  set_has_page_type();
  page_type_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.page_type)
}

// repeated string page_keyword = 17;
inline int BidRequest::page_keyword_size() const {
  return page_keyword_.size();
}
inline void BidRequest::clear_page_keyword() {
  page_keyword_.Clear();
}
inline const ::std::string& BidRequest::page_keyword(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.page_keyword)
  return page_keyword_.Get(index);
}
inline ::std::string* BidRequest::mutable_page_keyword(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.page_keyword)
  return page_keyword_.Mutable(index);
}
inline void BidRequest::set_page_keyword(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidRequest.page_keyword)
  page_keyword_.Mutable(index)->assign(value);
}
inline void BidRequest::set_page_keyword(int index, const char* value) {
  page_keyword_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidRequest.page_keyword)
}
inline void BidRequest::set_page_keyword(int index, const char* value, size_t size) {
  page_keyword_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidRequest.page_keyword)
}
inline ::std::string* BidRequest::add_page_keyword() {
  return page_keyword_.Add();
}
inline void BidRequest::add_page_keyword(const ::std::string& value) {
  page_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidRequest.page_keyword)
}
inline void BidRequest::add_page_keyword(const char* value) {
  page_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidRequest.page_keyword)
}
inline void BidRequest::add_page_keyword(const char* value, size_t size) {
  page_keyword_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidRequest.page_keyword)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest::page_keyword() const {
  // @@protoc_insertion_point(field_list:BidRequest.page_keyword)
  return page_keyword_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest::mutable_page_keyword() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.page_keyword)
  return &page_keyword_;
}

// optional int32 page_quality = 18;
inline bool BidRequest::has_page_quality() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BidRequest::set_has_page_quality() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BidRequest::clear_has_page_quality() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BidRequest::clear_page_quality() {
  page_quality_ = 0;
  clear_has_page_quality();
}
inline ::google::protobuf::int32 BidRequest::page_quality() const {
  // @@protoc_insertion_point(field_get:BidRequest.page_quality)
  return page_quality_;
}
inline void BidRequest::set_page_quality(::google::protobuf::int32 value) {
  set_has_page_quality();
  page_quality_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.page_quality)
}

// optional int32 page_vertical = 21;
inline bool BidRequest::has_page_vertical() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BidRequest::set_has_page_vertical() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BidRequest::clear_has_page_vertical() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BidRequest::clear_page_vertical() {
  page_vertical_ = 0;
  clear_has_page_vertical();
}
inline ::google::protobuf::int32 BidRequest::page_vertical() const {
  // @@protoc_insertion_point(field_get:BidRequest.page_vertical)
  return page_vertical_;
}
inline void BidRequest::set_page_vertical(::google::protobuf::int32 value) {
  set_has_page_vertical();
  page_vertical_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.page_vertical)
}

// repeated int32 excluded_product_category = 19 [packed = true];
inline int BidRequest::excluded_product_category_size() const {
  return excluded_product_category_.size();
}
inline void BidRequest::clear_excluded_product_category() {
  excluded_product_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest::excluded_product_category(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.excluded_product_category)
  return excluded_product_category_.Get(index);
}
inline void BidRequest::set_excluded_product_category(int index, ::google::protobuf::int32 value) {
  excluded_product_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidRequest.excluded_product_category)
}
inline void BidRequest::add_excluded_product_category(::google::protobuf::int32 value) {
  excluded_product_category_.Add(value);
  // @@protoc_insertion_point(field_add:BidRequest.excluded_product_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::excluded_product_category() const {
  // @@protoc_insertion_point(field_list:BidRequest.excluded_product_category)
  return excluded_product_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_excluded_product_category() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.excluded_product_category)
  return &excluded_product_category_;
}

// optional .BidRequest.Mobile mobile = 29;
inline bool BidRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BidRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BidRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BidRequest::clear_mobile() {
  if (mobile_ != NULL) mobile_->::BidRequest_Mobile::Clear();
  clear_has_mobile();
}
inline const ::BidRequest_Mobile& BidRequest::mobile() const {
  // @@protoc_insertion_point(field_get:BidRequest.mobile)
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
inline ::BidRequest_Mobile* BidRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) mobile_ = new ::BidRequest_Mobile;
  // @@protoc_insertion_point(field_mutable:BidRequest.mobile)
  return mobile_;
}
inline ::BidRequest_Mobile* BidRequest::release_mobile() {
  clear_has_mobile();
  ::BidRequest_Mobile* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_mobile(::BidRequest_Mobile* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.mobile)
}

// optional .BidRequest.Video video = 30;
inline bool BidRequest::has_video() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BidRequest::set_has_video() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BidRequest::clear_has_video() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BidRequest::clear_video() {
  if (video_ != NULL) video_->::BidRequest_Video::Clear();
  clear_has_video();
}
inline const ::BidRequest_Video& BidRequest::video() const {
  // @@protoc_insertion_point(field_get:BidRequest.video)
  return video_ != NULL ? *video_ : *default_instance_->video_;
}
inline ::BidRequest_Video* BidRequest::mutable_video() {
  set_has_video();
  if (video_ == NULL) video_ = new ::BidRequest_Video;
  // @@protoc_insertion_point(field_mutable:BidRequest.video)
  return video_;
}
inline ::BidRequest_Video* BidRequest::release_video() {
  clear_has_video();
  ::BidRequest_Video* temp = video_;
  video_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_video(::BidRequest_Video* video) {
  delete video_;
  video_ = video;
  if (video) {
    set_has_video();
  } else {
    clear_has_video();
  }
  // @@protoc_insertion_point(field_set_allocated:BidRequest.video)
}

// repeated .BidRequest.AdSlot adslot = 20;
inline int BidRequest::adslot_size() const {
  return adslot_.size();
}
inline void BidRequest::clear_adslot() {
  adslot_.Clear();
}
inline const ::BidRequest_AdSlot& BidRequest::adslot(int index) const {
  // @@protoc_insertion_point(field_get:BidRequest.adslot)
  return adslot_.Get(index);
}
inline ::BidRequest_AdSlot* BidRequest::mutable_adslot(int index) {
  // @@protoc_insertion_point(field_mutable:BidRequest.adslot)
  return adslot_.Mutable(index);
}
inline ::BidRequest_AdSlot* BidRequest::add_adslot() {
  // @@protoc_insertion_point(field_add:BidRequest.adslot)
  return adslot_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >&
BidRequest::adslot() const {
  // @@protoc_insertion_point(field_list:BidRequest.adslot)
  return adslot_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidRequest_AdSlot >*
BidRequest::mutable_adslot() {
  // @@protoc_insertion_point(field_mutable_list:BidRequest.adslot)
  return &adslot_;
}

// optional bool is_test = 26 [default = false];
inline bool BidRequest::has_is_test() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void BidRequest::set_has_is_test() {
  _has_bits_[0] |= 0x00800000u;
}
inline void BidRequest::clear_has_is_test() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void BidRequest::clear_is_test() {
  is_test_ = false;
  clear_has_is_test();
}
inline bool BidRequest::is_test() const {
  // @@protoc_insertion_point(field_get:BidRequest.is_test)
  return is_test_;
}
inline void BidRequest::set_is_test(bool value) {
  set_has_is_test();
  is_test_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.is_test)
}

// optional bool is_ping = 27 [default = false];
inline bool BidRequest::has_is_ping() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void BidRequest::set_has_is_ping() {
  _has_bits_[0] |= 0x01000000u;
}
inline void BidRequest::clear_has_is_ping() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void BidRequest::clear_is_ping() {
  is_ping_ = false;
  clear_has_is_ping();
}
inline bool BidRequest::is_ping() const {
  // @@protoc_insertion_point(field_get:BidRequest.is_ping)
  return is_ping_;
}
inline void BidRequest::set_is_ping(bool value) {
  set_has_is_ping();
  is_ping_ = value;
  // @@protoc_insertion_point(field_set:BidRequest.is_ping)
}

// -------------------------------------------------------------------

// BidResponse_Ad_LinkUnitKeyword

// optional string keyword = 1;
inline bool BidResponse_Ad_LinkUnitKeyword::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_LinkUnitKeyword::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_LinkUnitKeyword::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_LinkUnitKeyword::clear_keyword() {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_->clear();
  }
  clear_has_keyword();
}
inline const ::std::string& BidResponse_Ad_LinkUnitKeyword::keyword() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.LinkUnitKeyword.keyword)
  return *keyword_;
}
inline void BidResponse_Ad_LinkUnitKeyword::set_keyword(const ::std::string& value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.LinkUnitKeyword.keyword)
}
inline void BidResponse_Ad_LinkUnitKeyword::set_keyword(const char* value) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.LinkUnitKeyword.keyword)
}
inline void BidResponse_Ad_LinkUnitKeyword::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  keyword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.LinkUnitKeyword.keyword)
}
inline ::std::string* BidResponse_Ad_LinkUnitKeyword::mutable_keyword() {
  set_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    keyword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.LinkUnitKeyword.keyword)
  return keyword_;
}
inline ::std::string* BidResponse_Ad_LinkUnitKeyword::release_keyword() {
  clear_has_keyword();
  if (keyword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = keyword_;
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse_Ad_LinkUnitKeyword::set_allocated_keyword(::std::string* keyword) {
  if (keyword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete keyword_;
  }
  if (keyword) {
    set_has_keyword();
    keyword_ = keyword;
  } else {
    clear_has_keyword();
    keyword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.LinkUnitKeyword.keyword)
}

// repeated int32 selected_style_type = 2;
inline int BidResponse_Ad_LinkUnitKeyword::selected_style_type_size() const {
  return selected_style_type_.size();
}
inline void BidResponse_Ad_LinkUnitKeyword::clear_selected_style_type() {
  selected_style_type_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ad_LinkUnitKeyword::selected_style_type(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.LinkUnitKeyword.selected_style_type)
  return selected_style_type_.Get(index);
}
inline void BidResponse_Ad_LinkUnitKeyword::set_selected_style_type(int index, ::google::protobuf::int32 value) {
  selected_style_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.LinkUnitKeyword.selected_style_type)
}
inline void BidResponse_Ad_LinkUnitKeyword::add_selected_style_type(::google::protobuf::int32 value) {
  selected_style_type_.Add(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.LinkUnitKeyword.selected_style_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ad_LinkUnitKeyword::selected_style_type() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.LinkUnitKeyword.selected_style_type)
  return selected_style_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ad_LinkUnitKeyword::mutable_selected_style_type() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.LinkUnitKeyword.selected_style_type)
  return &selected_style_type_;
}

// -------------------------------------------------------------------

// BidResponse_Ad_ExpandCreativeInfo

// optional int32 creative_width = 1;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_width() {
  creative_width_ = 0;
  clear_has_creative_width();
}
inline ::google::protobuf::int32 BidResponse_Ad_ExpandCreativeInfo::creative_width() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.ExpandCreativeInfo.creative_width)
  return creative_width_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_width(::google::protobuf::int32 value) {
  set_has_creative_width();
  creative_width_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.ExpandCreativeInfo.creative_width)
}

// optional int32 creative_height = 2;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_height() {
  creative_height_ = 0;
  clear_has_creative_height();
}
inline ::google::protobuf::int32 BidResponse_Ad_ExpandCreativeInfo::creative_height() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.ExpandCreativeInfo.creative_height)
  return creative_height_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_height(::google::protobuf::int32 value) {
  set_has_creative_height();
  creative_height_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.ExpandCreativeInfo.creative_height)
}

// optional string creative_landing_page = 3;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_landing_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_landing_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_landing_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_landing_page() {
  if (creative_landing_page_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creative_landing_page_->clear();
  }
  clear_has_creative_landing_page();
}
inline const ::std::string& BidResponse_Ad_ExpandCreativeInfo::creative_landing_page() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
  return *creative_landing_page_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_landing_page(const ::std::string& value) {
  set_has_creative_landing_page();
  if (creative_landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creative_landing_page_ = new ::std::string;
  }
  creative_landing_page_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_landing_page(const char* value) {
  set_has_creative_landing_page();
  if (creative_landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creative_landing_page_ = new ::std::string;
  }
  creative_landing_page_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_landing_page(const char* value, size_t size) {
  set_has_creative_landing_page();
  if (creative_landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creative_landing_page_ = new ::std::string;
  }
  creative_landing_page_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}
inline ::std::string* BidResponse_Ad_ExpandCreativeInfo::mutable_creative_landing_page() {
  set_has_creative_landing_page();
  if (creative_landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creative_landing_page_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
  return creative_landing_page_;
}
inline ::std::string* BidResponse_Ad_ExpandCreativeInfo::release_creative_landing_page() {
  clear_has_creative_landing_page();
  if (creative_landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = creative_landing_page_;
    creative_landing_page_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_allocated_creative_landing_page(::std::string* creative_landing_page) {
  if (creative_landing_page_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete creative_landing_page_;
  }
  if (creative_landing_page) {
    set_has_creative_landing_page();
    creative_landing_page_ = creative_landing_page;
  } else {
    clear_has_creative_landing_page();
    creative_landing_page_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}

// optional int32 creative_type = 4;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_type() {
  creative_type_ = 0;
  clear_has_creative_type();
}
inline ::google::protobuf::int32 BidResponse_Ad_ExpandCreativeInfo::creative_type() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.ExpandCreativeInfo.creative_type)
  return creative_type_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_type(::google::protobuf::int32 value) {
  set_has_creative_type();
  creative_type_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.ExpandCreativeInfo.creative_type)
}

// -------------------------------------------------------------------

// BidResponse_Ad

// optional int32 sequence_id = 1;
inline bool BidResponse_Ad::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad::set_has_sequence_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad::clear_has_sequence_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad::clear_sequence_id() {
  sequence_id_ = 0;
  clear_has_sequence_id();
}
inline ::google::protobuf::int32 BidResponse_Ad::sequence_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.sequence_id)
  return sequence_id_;
}
inline void BidResponse_Ad::set_sequence_id(::google::protobuf::int32 value) {
  set_has_sequence_id();
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.sequence_id)
}

// optional int64 creative_id = 2;
inline bool BidResponse_Ad::has_creative_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad::set_has_creative_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad::clear_creative_id() {
  creative_id_ = GOOGLE_LONGLONG(0);
  clear_has_creative_id();
}
inline ::google::protobuf::int64 BidResponse_Ad::creative_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.creative_id)
  return creative_id_;
}
inline void BidResponse_Ad::set_creative_id(::google::protobuf::int64 value) {
  set_has_creative_id();
  creative_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.creative_id)
}

// optional string html_snippet = 7;
inline bool BidResponse_Ad::has_html_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad::set_has_html_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad::clear_has_html_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad::clear_html_snippet() {
  if (html_snippet_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    html_snippet_->clear();
  }
  clear_has_html_snippet();
}
inline const ::std::string& BidResponse_Ad::html_snippet() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.html_snippet)
  return *html_snippet_;
}
inline void BidResponse_Ad::set_html_snippet(const ::std::string& value) {
  set_has_html_snippet();
  if (html_snippet_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    html_snippet_ = new ::std::string;
  }
  html_snippet_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.html_snippet)
}
inline void BidResponse_Ad::set_html_snippet(const char* value) {
  set_has_html_snippet();
  if (html_snippet_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    html_snippet_ = new ::std::string;
  }
  html_snippet_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.html_snippet)
}
inline void BidResponse_Ad::set_html_snippet(const char* value, size_t size) {
  set_has_html_snippet();
  if (html_snippet_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    html_snippet_ = new ::std::string;
  }
  html_snippet_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.html_snippet)
}
inline ::std::string* BidResponse_Ad::mutable_html_snippet() {
  set_has_html_snippet();
  if (html_snippet_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    html_snippet_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.html_snippet)
  return html_snippet_;
}
inline ::std::string* BidResponse_Ad::release_html_snippet() {
  clear_has_html_snippet();
  if (html_snippet_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = html_snippet_;
    html_snippet_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse_Ad::set_allocated_html_snippet(::std::string* html_snippet) {
  if (html_snippet_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete html_snippet_;
  }
  if (html_snippet) {
    set_has_html_snippet();
    html_snippet_ = html_snippet;
  } else {
    clear_has_html_snippet();
    html_snippet_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.html_snippet)
}

// optional .BidResponse.Ad.LinkUnitKeyword link_unit_keyword = 18;
inline bool BidResponse_Ad::has_link_unit_keyword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad::set_has_link_unit_keyword() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad::clear_has_link_unit_keyword() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad::clear_link_unit_keyword() {
  if (link_unit_keyword_ != NULL) link_unit_keyword_->::BidResponse_Ad_LinkUnitKeyword::Clear();
  clear_has_link_unit_keyword();
}
inline const ::BidResponse_Ad_LinkUnitKeyword& BidResponse_Ad::link_unit_keyword() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.link_unit_keyword)
  return link_unit_keyword_ != NULL ? *link_unit_keyword_ : *default_instance_->link_unit_keyword_;
}
inline ::BidResponse_Ad_LinkUnitKeyword* BidResponse_Ad::mutable_link_unit_keyword() {
  set_has_link_unit_keyword();
  if (link_unit_keyword_ == NULL) link_unit_keyword_ = new ::BidResponse_Ad_LinkUnitKeyword;
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.link_unit_keyword)
  return link_unit_keyword_;
}
inline ::BidResponse_Ad_LinkUnitKeyword* BidResponse_Ad::release_link_unit_keyword() {
  clear_has_link_unit_keyword();
  ::BidResponse_Ad_LinkUnitKeyword* temp = link_unit_keyword_;
  link_unit_keyword_ = NULL;
  return temp;
}
inline void BidResponse_Ad::set_allocated_link_unit_keyword(::BidResponse_Ad_LinkUnitKeyword* link_unit_keyword) {
  delete link_unit_keyword_;
  link_unit_keyword_ = link_unit_keyword;
  if (link_unit_keyword) {
    set_has_link_unit_keyword();
  } else {
    clear_has_link_unit_keyword();
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.link_unit_keyword)
}

// optional uint64 advertiser_id = 8;
inline bool BidResponse_Ad::has_advertiser_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidResponse_Ad::set_has_advertiser_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidResponse_Ad::clear_has_advertiser_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidResponse_Ad::clear_advertiser_id() {
  advertiser_id_ = GOOGLE_ULONGLONG(0);
  clear_has_advertiser_id();
}
inline ::google::protobuf::uint64 BidResponse_Ad::advertiser_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.advertiser_id)
  return advertiser_id_;
}
inline void BidResponse_Ad::set_advertiser_id(::google::protobuf::uint64 value) {
  set_has_advertiser_id();
  advertiser_id_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.advertiser_id)
}

// optional int32 width = 9;
inline bool BidResponse_Ad::has_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidResponse_Ad::set_has_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidResponse_Ad::clear_has_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidResponse_Ad::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidResponse_Ad::width() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.width)
  return width_;
}
inline void BidResponse_Ad::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.width)
}

// optional int32 height = 10;
inline bool BidResponse_Ad::has_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidResponse_Ad::set_has_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidResponse_Ad::clear_has_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidResponse_Ad::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidResponse_Ad::height() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.height)
  return height_;
}
inline void BidResponse_Ad::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.height)
}

// optional int32 category = 11;
inline bool BidResponse_Ad::has_category() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidResponse_Ad::set_has_category() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidResponse_Ad::clear_has_category() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidResponse_Ad::clear_category() {
  category_ = 0;
  clear_has_category();
}
inline ::google::protobuf::int32 BidResponse_Ad::category() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.category)
  return category_;
}
inline void BidResponse_Ad::set_category(::google::protobuf::int32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.category)
}

// optional int32 type = 12;
inline bool BidResponse_Ad::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidResponse_Ad::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidResponse_Ad::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidResponse_Ad::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BidResponse_Ad::type() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.type)
  return type_;
}
inline void BidResponse_Ad::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.type)
}

// optional string landing_page = 13;
inline bool BidResponse_Ad::has_landing_page() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidResponse_Ad::set_has_landing_page() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidResponse_Ad::clear_has_landing_page() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidResponse_Ad::clear_landing_page() {
  if (landing_page_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    landing_page_->clear();
  }
  clear_has_landing_page();
}
inline const ::std::string& BidResponse_Ad::landing_page() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.landing_page)
  return *landing_page_;
}
inline void BidResponse_Ad::set_landing_page(const ::std::string& value) {
  set_has_landing_page();
  if (landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    landing_page_ = new ::std::string;
  }
  landing_page_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.landing_page)
}
inline void BidResponse_Ad::set_landing_page(const char* value) {
  set_has_landing_page();
  if (landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    landing_page_ = new ::std::string;
  }
  landing_page_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.landing_page)
}
inline void BidResponse_Ad::set_landing_page(const char* value, size_t size) {
  set_has_landing_page();
  if (landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    landing_page_ = new ::std::string;
  }
  landing_page_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.landing_page)
}
inline ::std::string* BidResponse_Ad::mutable_landing_page() {
  set_has_landing_page();
  if (landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    landing_page_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.landing_page)
  return landing_page_;
}
inline ::std::string* BidResponse_Ad::release_landing_page() {
  clear_has_landing_page();
  if (landing_page_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = landing_page_;
    landing_page_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse_Ad::set_allocated_landing_page(::std::string* landing_page) {
  if (landing_page_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete landing_page_;
  }
  if (landing_page) {
    set_has_landing_page();
    landing_page_ = landing_page;
  } else {
    clear_has_landing_page();
    landing_page_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.landing_page)
}

// repeated string target_url = 14;
inline int BidResponse_Ad::target_url_size() const {
  return target_url_.size();
}
inline void BidResponse_Ad::clear_target_url() {
  target_url_.Clear();
}
inline const ::std::string& BidResponse_Ad::target_url(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.target_url)
  return target_url_.Get(index);
}
inline ::std::string* BidResponse_Ad::mutable_target_url(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.target_url)
  return target_url_.Mutable(index);
}
inline void BidResponse_Ad::set_target_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidResponse.Ad.target_url)
  target_url_.Mutable(index)->assign(value);
}
inline void BidResponse_Ad::set_target_url(int index, const char* value) {
  target_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.target_url)
}
inline void BidResponse_Ad::set_target_url(int index, const char* value, size_t size) {
  target_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.target_url)
}
inline ::std::string* BidResponse_Ad::add_target_url() {
  return target_url_.Add();
}
inline void BidResponse_Ad::add_target_url(const ::std::string& value) {
  target_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.target_url)
}
inline void BidResponse_Ad::add_target_url(const char* value) {
  target_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidResponse.Ad.target_url)
}
inline void BidResponse_Ad::add_target_url(const char* value, size_t size) {
  target_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidResponse.Ad.target_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ad::target_url() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.target_url)
  return target_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ad::mutable_target_url() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.target_url)
  return &target_url_;
}

// repeated string monitor_urls = 17;
inline int BidResponse_Ad::monitor_urls_size() const {
  return monitor_urls_.size();
}
inline void BidResponse_Ad::clear_monitor_urls() {
  monitor_urls_.Clear();
}
inline const ::std::string& BidResponse_Ad::monitor_urls(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.monitor_urls)
  return monitor_urls_.Get(index);
}
inline ::std::string* BidResponse_Ad::mutable_monitor_urls(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.monitor_urls)
  return monitor_urls_.Mutable(index);
}
inline void BidResponse_Ad::set_monitor_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BidResponse.Ad.monitor_urls)
  monitor_urls_.Mutable(index)->assign(value);
}
inline void BidResponse_Ad::set_monitor_urls(int index, const char* value) {
  monitor_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.monitor_urls)
}
inline void BidResponse_Ad::set_monitor_urls(int index, const char* value, size_t size) {
  monitor_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.monitor_urls)
}
inline ::std::string* BidResponse_Ad::add_monitor_urls() {
  return monitor_urls_.Add();
}
inline void BidResponse_Ad::add_monitor_urls(const ::std::string& value) {
  monitor_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BidResponse.Ad.monitor_urls)
}
inline void BidResponse_Ad::add_monitor_urls(const char* value) {
  monitor_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BidResponse.Ad.monitor_urls)
}
inline void BidResponse_Ad::add_monitor_urls(const char* value, size_t size) {
  monitor_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BidResponse.Ad.monitor_urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ad::monitor_urls() const {
  // @@protoc_insertion_point(field_list:BidResponse.Ad.monitor_urls)
  return monitor_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ad::mutable_monitor_urls() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.Ad.monitor_urls)
  return &monitor_urls_;
}

// optional .BidResponse.Ad.ExpandCreativeInfo expand_creative_info = 19;
inline bool BidResponse_Ad::has_expand_creative_info() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidResponse_Ad::set_has_expand_creative_info() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidResponse_Ad::clear_has_expand_creative_info() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidResponse_Ad::clear_expand_creative_info() {
  if (expand_creative_info_ != NULL) expand_creative_info_->::BidResponse_Ad_ExpandCreativeInfo::Clear();
  clear_has_expand_creative_info();
}
inline const ::BidResponse_Ad_ExpandCreativeInfo& BidResponse_Ad::expand_creative_info() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.expand_creative_info)
  return expand_creative_info_ != NULL ? *expand_creative_info_ : *default_instance_->expand_creative_info_;
}
inline ::BidResponse_Ad_ExpandCreativeInfo* BidResponse_Ad::mutable_expand_creative_info() {
  set_has_expand_creative_info();
  if (expand_creative_info_ == NULL) expand_creative_info_ = new ::BidResponse_Ad_ExpandCreativeInfo;
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.expand_creative_info)
  return expand_creative_info_;
}
inline ::BidResponse_Ad_ExpandCreativeInfo* BidResponse_Ad::release_expand_creative_info() {
  clear_has_expand_creative_info();
  ::BidResponse_Ad_ExpandCreativeInfo* temp = expand_creative_info_;
  expand_creative_info_ = NULL;
  return temp;
}
inline void BidResponse_Ad::set_allocated_expand_creative_info(::BidResponse_Ad_ExpandCreativeInfo* expand_creative_info) {
  delete expand_creative_info_;
  expand_creative_info_ = expand_creative_info;
  if (expand_creative_info) {
    set_has_expand_creative_info();
  } else {
    clear_has_expand_creative_info();
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.expand_creative_info)
}

// optional int32 max_cpm = 3;
inline bool BidResponse_Ad::has_max_cpm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidResponse_Ad::set_has_max_cpm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidResponse_Ad::clear_has_max_cpm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidResponse_Ad::clear_max_cpm() {
  max_cpm_ = 0;
  clear_has_max_cpm();
}
inline ::google::protobuf::int32 BidResponse_Ad::max_cpm() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.max_cpm)
  return max_cpm_;
}
inline void BidResponse_Ad::set_max_cpm(::google::protobuf::int32 value) {
  set_has_max_cpm();
  max_cpm_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.max_cpm)
}

// optional string extdata = 5;
inline bool BidResponse_Ad::has_extdata() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidResponse_Ad::set_has_extdata() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidResponse_Ad::clear_has_extdata() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidResponse_Ad::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& BidResponse_Ad::extdata() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.extdata)
  return *extdata_;
}
inline void BidResponse_Ad::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.extdata)
}
inline void BidResponse_Ad::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.extdata)
}
inline void BidResponse_Ad::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.extdata)
}
inline ::std::string* BidResponse_Ad::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.extdata)
  return extdata_;
}
inline ::std::string* BidResponse_Ad::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse_Ad::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.extdata)
}

// optional bool is_cookie_matching = 6;
inline bool BidResponse_Ad::has_is_cookie_matching() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidResponse_Ad::set_has_is_cookie_matching() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidResponse_Ad::clear_has_is_cookie_matching() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidResponse_Ad::clear_is_cookie_matching() {
  is_cookie_matching_ = false;
  clear_has_is_cookie_matching();
}
inline bool BidResponse_Ad::is_cookie_matching() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.is_cookie_matching)
  return is_cookie_matching_;
}
inline void BidResponse_Ad::set_is_cookie_matching(bool value) {
  set_has_is_cookie_matching();
  is_cookie_matching_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.Ad.is_cookie_matching)
}

// optional string preferred_order_id = 15;
inline bool BidResponse_Ad::has_preferred_order_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidResponse_Ad::set_has_preferred_order_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidResponse_Ad::clear_has_preferred_order_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidResponse_Ad::clear_preferred_order_id() {
  if (preferred_order_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_order_id_->clear();
  }
  clear_has_preferred_order_id();
}
inline const ::std::string& BidResponse_Ad::preferred_order_id() const {
  // @@protoc_insertion_point(field_get:BidResponse.Ad.preferred_order_id)
  return *preferred_order_id_;
}
inline void BidResponse_Ad::set_preferred_order_id(const ::std::string& value) {
  set_has_preferred_order_id();
  if (preferred_order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_order_id_ = new ::std::string;
  }
  preferred_order_id_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.Ad.preferred_order_id)
}
inline void BidResponse_Ad::set_preferred_order_id(const char* value) {
  set_has_preferred_order_id();
  if (preferred_order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_order_id_ = new ::std::string;
  }
  preferred_order_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.Ad.preferred_order_id)
}
inline void BidResponse_Ad::set_preferred_order_id(const char* value, size_t size) {
  set_has_preferred_order_id();
  if (preferred_order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_order_id_ = new ::std::string;
  }
  preferred_order_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.Ad.preferred_order_id)
}
inline ::std::string* BidResponse_Ad::mutable_preferred_order_id() {
  set_has_preferred_order_id();
  if (preferred_order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferred_order_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.Ad.preferred_order_id)
  return preferred_order_id_;
}
inline ::std::string* BidResponse_Ad::release_preferred_order_id() {
  clear_has_preferred_order_id();
  if (preferred_order_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = preferred_order_id_;
    preferred_order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse_Ad::set_allocated_preferred_order_id(::std::string* preferred_order_id) {
  if (preferred_order_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete preferred_order_id_;
  }
  if (preferred_order_id) {
    set_has_preferred_order_id();
    preferred_order_id_ = preferred_order_id;
  } else {
    clear_has_preferred_order_id();
    preferred_order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.Ad.preferred_order_id)
}

// -------------------------------------------------------------------

// BidResponse

// required string id = 1;
inline bool BidResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& BidResponse::id() const {
  // @@protoc_insertion_point(field_get:BidResponse.id)
  return *id_;
}
inline void BidResponse::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.id)
}
inline void BidResponse::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.id)
}
inline void BidResponse::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.id)
}
inline ::std::string* BidResponse::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.id)
  return id_;
}
inline ::std::string* BidResponse::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.id)
}

// repeated .BidResponse.Ad ad = 2;
inline int BidResponse::ad_size() const {
  return ad_.size();
}
inline void BidResponse::clear_ad() {
  ad_.Clear();
}
inline const ::BidResponse_Ad& BidResponse::ad(int index) const {
  // @@protoc_insertion_point(field_get:BidResponse.ad)
  return ad_.Get(index);
}
inline ::BidResponse_Ad* BidResponse::mutable_ad(int index) {
  // @@protoc_insertion_point(field_mutable:BidResponse.ad)
  return ad_.Mutable(index);
}
inline ::BidResponse_Ad* BidResponse::add_ad() {
  // @@protoc_insertion_point(field_add:BidResponse.ad)
  return ad_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >&
BidResponse::ad() const {
  // @@protoc_insertion_point(field_list:BidResponse.ad)
  return ad_;
}
inline ::google::protobuf::RepeatedPtrField< ::BidResponse_Ad >*
BidResponse::mutable_ad() {
  // @@protoc_insertion_point(field_mutable_list:BidResponse.ad)
  return &ad_;
}

// optional string debug_string = 3;
inline bool BidResponse::has_debug_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse::set_has_debug_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse::clear_has_debug_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse::clear_debug_string() {
  if (debug_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_string_->clear();
  }
  clear_has_debug_string();
}
inline const ::std::string& BidResponse::debug_string() const {
  // @@protoc_insertion_point(field_get:BidResponse.debug_string)
  return *debug_string_;
}
inline void BidResponse::set_debug_string(const ::std::string& value) {
  set_has_debug_string();
  if (debug_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_string_ = new ::std::string;
  }
  debug_string_->assign(value);
  // @@protoc_insertion_point(field_set:BidResponse.debug_string)
}
inline void BidResponse::set_debug_string(const char* value) {
  set_has_debug_string();
  if (debug_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_string_ = new ::std::string;
  }
  debug_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:BidResponse.debug_string)
}
inline void BidResponse::set_debug_string(const char* value, size_t size) {
  set_has_debug_string();
  if (debug_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_string_ = new ::std::string;
  }
  debug_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BidResponse.debug_string)
}
inline ::std::string* BidResponse::mutable_debug_string() {
  set_has_debug_string();
  if (debug_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    debug_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:BidResponse.debug_string)
  return debug_string_;
}
inline ::std::string* BidResponse::release_debug_string() {
  clear_has_debug_string();
  if (debug_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = debug_string_;
    debug_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BidResponse::set_allocated_debug_string(::std::string* debug_string) {
  if (debug_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete debug_string_;
  }
  if (debug_string) {
    set_has_debug_string();
    debug_string_ = debug_string;
  } else {
    clear_has_debug_string();
    debug_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:BidResponse.debug_string)
}

// optional int32 processing_time_ms = 4;
inline bool BidResponse::has_processing_time_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse::set_has_processing_time_ms() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse::clear_has_processing_time_ms() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse::clear_processing_time_ms() {
  processing_time_ms_ = 0;
  clear_has_processing_time_ms();
}
inline ::google::protobuf::int32 BidResponse::processing_time_ms() const {
  // @@protoc_insertion_point(field_get:BidResponse.processing_time_ms)
  return processing_time_ms_;
}
inline void BidResponse::set_processing_time_ms(::google::protobuf::int32 value) {
  set_has_processing_time_ms();
  processing_time_ms_ = value;
  // @@protoc_insertion_point(field_set:BidResponse.processing_time_ms)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BidRequest_Geo_Coordinate_Standard> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Geo_Coordinate_Standard>() {
  return ::BidRequest_Geo_Coordinate_Standard_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_MobileID_IDType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_MobileID_IDType>() {
  return ::BidRequest_Mobile_MobileID_IDType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_ForAdvertisingID_IDType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_ForAdvertisingID_IDType>() {
  return ::BidRequest_Mobile_ForAdvertisingID_IDType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_MobileApp_AppInteractionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_MobileApp_AppInteractionType>() {
  return ::BidRequest_Mobile_MobileApp_AppInteractionType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_MobileDeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_MobileDeviceType>() {
  return ::BidRequest_Mobile_MobileDeviceType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_OS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_OS>() {
  return ::BidRequest_Mobile_OS_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Mobile_WirelessNetworkType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Mobile_WirelessNetworkType>() {
  return ::BidRequest_Mobile_WirelessNetworkType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType>() {
  return ::BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_AdSlot_ExpandCreativeInfo_Direction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_AdSlot_ExpandCreativeInfo_Direction>() {
  return ::BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor();
}
template <> struct is_proto_enum< ::BidRequest_Gender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BidRequest_Gender>() {
  return ::BidRequest_Gender_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_baidu_5frealtime_5fbidding_2eproto__INCLUDED
